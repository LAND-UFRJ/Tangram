# Makefile.in generated by automake 1.11.3 from Makefile.am.
# ModelEnv/solver/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/tangram2
pkgincludedir = $(includedir)/tangram2
pkglibdir = $(libdir)/tangram2
pkglibexecdir = $(libexecdir)/tangram2
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = solv$(EXEEXT)
subdir = ModelEnv/solver
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libsolv_a_AR = $(AR) $(ARFLAGS)
libsolv_a_LIBADD =
am__objects_1 = libsolv_a-solv.$(OBJEXT) \
	libsolv_a-interfaces_solvers.$(OBJEXT) \
	libsolv_a-convergence.$(OBJEXT) \
	libsolv_a-gauss_siedel.$(OBJEXT) libsolv_a-jacobi.$(OBJEXT) \
	libsolv_a-sor.$(OBJEXT) libsolv_a-power.$(OBJEXT) \
	libsolv_a-gth_no_block.$(OBJEXT) libsolv_a-gth.$(OBJEXT) \
	libsolv_a-uniformization.$(OBJEXT) libsolv_a-breward.$(OBJEXT) \
	libsolv_a-interface_breward.$(OBJEXT) \
	libsolv_a-bounds.$(OBJEXT) libsolv_a-parameters.$(OBJEXT) \
	libsolv_a-interface_omega.$(OBJEXT) \
	libsolv_a-operational_time.$(OBJEXT) \
	libsolv_a-det_event.$(OBJEXT) \
	libsolv_a-expected_trans_reward.$(OBJEXT) \
	libsolv_a-expected_trans_imp_rew.$(OBJEXT) \
	libsolv_a-ImpMatrix.$(OBJEXT) \
	libsolv_a-rate_cumulative_approximation.$(OBJEXT) \
	libsolv_a-cumulative_reward_iterative.$(OBJEXT) \
	libsolv_a-sor-flex.$(OBJEXT) \
	libsolv_a-iterative_methods_reward.$(OBJEXT) \
	libsolv_a-functions_espa.$(OBJEXT) \
	libsolv_a-espa_direct.$(OBJEXT) \
	libsolv_a-espa_iterative.$(OBJEXT)
am_libsolv_a_OBJECTS = $(am__objects_1)
libsolv_a_OBJECTS = $(am_libsolv_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_solv_OBJECTS = solv-solv.$(OBJEXT) \
	solv-interfaces_solvers.$(OBJEXT) solv-convergence.$(OBJEXT) \
	solv-gauss_siedel.$(OBJEXT) solv-jacobi.$(OBJEXT) \
	solv-sor.$(OBJEXT) solv-power.$(OBJEXT) \
	solv-gth_no_block.$(OBJEXT) solv-gth.$(OBJEXT) \
	solv-uniformization.$(OBJEXT) solv-breward.$(OBJEXT) \
	solv-interface_breward.$(OBJEXT) solv-bounds.$(OBJEXT) \
	solv-parameters.$(OBJEXT) solv-interface_omega.$(OBJEXT) \
	solv-operational_time.$(OBJEXT) solv-det_event.$(OBJEXT) \
	solv-expected_trans_reward.$(OBJEXT) \
	solv-expected_trans_imp_rew.$(OBJEXT) solv-ImpMatrix.$(OBJEXT) \
	solv-rate_cumulative_approximation.$(OBJEXT) \
	solv-cumulative_reward_iterative.$(OBJEXT) \
	solv-sor-flex.$(OBJEXT) \
	solv-iterative_methods_reward.$(OBJEXT) \
	solv-functions_espa.$(OBJEXT) solv-espa_direct.$(OBJEXT) \
	solv-espa_iterative.$(OBJEXT)
solv_OBJECTS = $(am_solv_OBJECTS)
solv_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsolv_a_SOURCES) $(solv_SOURCES)
DIST_SOURCES = $(libsolv_a_SOURCES) $(solv_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/missing --run autoconf
AUTOHEADER = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/missing --run autoheader
AUTOMAKE = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HAVE_DVIPDFM = 
HAVE_GNUPLOT = yes
HAVE_LATEX = 
HAVE_RSH = yes
HAVE_TGIF = yes
HAVE_XPVM = 
HAVE_XTERM = yes
HAVE_YACC = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAR = /usr/lib/jvm/java-7-openjdk-i386/bin/jar
JAVAC = /usr/lib/jvm/java-7-openjdk-i386/bin/javac
JAVAH = /usr/lib/jvm/java-7-openjdk-i386/bin/javah
LD = /usr/bin/ld
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lreadline -lfl -lm -lpthread   -lX11  -lX11
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MOC = yes
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = tangram2
PACKAGE_BUGREPORT = support@land.ufrj.br
PACKAGE_NAME = Tangram2
PACKAGE_STRING = Tangram2 3.5.1
PACKAGE_TARNAME = tangram2
PACKAGE_URL = 
PACKAGE_VERSION = 3.5.1
PATH_SEPARATOR = :
POW_LIB = 
RANLIB = ranlib
SCP = /usr/bin/scp
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSH = /usr/bin/ssh
STRIP = strip
VERSION = 3.5.1
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS =  -lX11 -lXt -lXaw
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
YACC = bison -y
YFLAGS = 
abs_builddir = /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/ModelEnv/solver
abs_srcdir = /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/ModelEnv/solver
abs_top_builddir = /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2
abs_top_srcdir = /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/gdjaime/tangram2-orig-30-Nov-2013/tangram2/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/Tangram2
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = libsolv.a
solv_SOURCES = solv.c interfaces_solvers.c convergence.c gauss_siedel.c jacobi.c \
               sor.c power.c gth_no_block.c gth.c uniformization.c breward.c \
               interface_breward.c bounds.c parameters.c \
               interface_omega.c operational_time.c det_event.c \
               expected_trans_reward.c expected_trans_imp_rew.c ImpMatrix.c\
               rate_cumulative_approximation.c cumulative_reward_iterative.c\
               sor-flex.c iterative_methods_reward.c functions_espa.c\
               espa_direct.c espa_iterative.c\
               interface_breward.h bounds.h parameters.h \
               interface_omega.h det_event.h \
               ImpMatrix.h functions_espa_esra.h structs.h pmf.h

libsolv_a_SOURCES = $(solv_SOURCES)
libsolv_a_CPPFLAGS = -I$(top_srcdir)/ModelEnv/libMatrix/ -O6 -g -Wall
solv_CPPFLAGS = -I$(top_srcdir)/ModelEnv/libMatrix/ -O6 -g -Wall
solv_LDADD = -L$(top_srcdir)/ModelEnv/libMatrix/ -lMatrix
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu ModelEnv/solver/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu ModelEnv/solver/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libsolv.a: $(libsolv_a_OBJECTS) $(libsolv_a_DEPENDENCIES) $(EXTRA_libsolv_a_DEPENDENCIES) 
	-rm -f libsolv.a
	$(libsolv_a_AR) libsolv.a $(libsolv_a_OBJECTS) $(libsolv_a_LIBADD)
	$(RANLIB) libsolv.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
solv$(EXEEXT): $(solv_OBJECTS) $(solv_DEPENDENCIES) $(EXTRA_solv_DEPENDENCIES) 
	@rm -f solv$(EXEEXT)
	$(LINK) $(solv_OBJECTS) $(solv_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libsolv_a-ImpMatrix.Po
include ./$(DEPDIR)/libsolv_a-bounds.Po
include ./$(DEPDIR)/libsolv_a-breward.Po
include ./$(DEPDIR)/libsolv_a-convergence.Po
include ./$(DEPDIR)/libsolv_a-cumulative_reward_iterative.Po
include ./$(DEPDIR)/libsolv_a-det_event.Po
include ./$(DEPDIR)/libsolv_a-espa_direct.Po
include ./$(DEPDIR)/libsolv_a-espa_iterative.Po
include ./$(DEPDIR)/libsolv_a-expected_trans_imp_rew.Po
include ./$(DEPDIR)/libsolv_a-expected_trans_reward.Po
include ./$(DEPDIR)/libsolv_a-functions_espa.Po
include ./$(DEPDIR)/libsolv_a-gauss_siedel.Po
include ./$(DEPDIR)/libsolv_a-gth.Po
include ./$(DEPDIR)/libsolv_a-gth_no_block.Po
include ./$(DEPDIR)/libsolv_a-interface_breward.Po
include ./$(DEPDIR)/libsolv_a-interface_omega.Po
include ./$(DEPDIR)/libsolv_a-interfaces_solvers.Po
include ./$(DEPDIR)/libsolv_a-iterative_methods_reward.Po
include ./$(DEPDIR)/libsolv_a-jacobi.Po
include ./$(DEPDIR)/libsolv_a-operational_time.Po
include ./$(DEPDIR)/libsolv_a-parameters.Po
include ./$(DEPDIR)/libsolv_a-power.Po
include ./$(DEPDIR)/libsolv_a-rate_cumulative_approximation.Po
include ./$(DEPDIR)/libsolv_a-solv.Po
include ./$(DEPDIR)/libsolv_a-sor-flex.Po
include ./$(DEPDIR)/libsolv_a-sor.Po
include ./$(DEPDIR)/libsolv_a-uniformization.Po
include ./$(DEPDIR)/solv-ImpMatrix.Po
include ./$(DEPDIR)/solv-bounds.Po
include ./$(DEPDIR)/solv-breward.Po
include ./$(DEPDIR)/solv-convergence.Po
include ./$(DEPDIR)/solv-cumulative_reward_iterative.Po
include ./$(DEPDIR)/solv-det_event.Po
include ./$(DEPDIR)/solv-espa_direct.Po
include ./$(DEPDIR)/solv-espa_iterative.Po
include ./$(DEPDIR)/solv-expected_trans_imp_rew.Po
include ./$(DEPDIR)/solv-expected_trans_reward.Po
include ./$(DEPDIR)/solv-functions_espa.Po
include ./$(DEPDIR)/solv-gauss_siedel.Po
include ./$(DEPDIR)/solv-gth.Po
include ./$(DEPDIR)/solv-gth_no_block.Po
include ./$(DEPDIR)/solv-interface_breward.Po
include ./$(DEPDIR)/solv-interface_omega.Po
include ./$(DEPDIR)/solv-interfaces_solvers.Po
include ./$(DEPDIR)/solv-iterative_methods_reward.Po
include ./$(DEPDIR)/solv-jacobi.Po
include ./$(DEPDIR)/solv-operational_time.Po
include ./$(DEPDIR)/solv-parameters.Po
include ./$(DEPDIR)/solv-power.Po
include ./$(DEPDIR)/solv-rate_cumulative_approximation.Po
include ./$(DEPDIR)/solv-solv.Po
include ./$(DEPDIR)/solv-sor-flex.Po
include ./$(DEPDIR)/solv-sor.Po
include ./$(DEPDIR)/solv-uniformization.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libsolv_a-solv.o: solv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-solv.o -MD -MP -MF $(DEPDIR)/libsolv_a-solv.Tpo -c -o libsolv_a-solv.o `test -f 'solv.c' || echo '$(srcdir)/'`solv.c
	$(am__mv) $(DEPDIR)/libsolv_a-solv.Tpo $(DEPDIR)/libsolv_a-solv.Po
#	source='solv.c' object='libsolv_a-solv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-solv.o `test -f 'solv.c' || echo '$(srcdir)/'`solv.c

libsolv_a-solv.obj: solv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-solv.obj -MD -MP -MF $(DEPDIR)/libsolv_a-solv.Tpo -c -o libsolv_a-solv.obj `if test -f 'solv.c'; then $(CYGPATH_W) 'solv.c'; else $(CYGPATH_W) '$(srcdir)/solv.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-solv.Tpo $(DEPDIR)/libsolv_a-solv.Po
#	source='solv.c' object='libsolv_a-solv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-solv.obj `if test -f 'solv.c'; then $(CYGPATH_W) 'solv.c'; else $(CYGPATH_W) '$(srcdir)/solv.c'; fi`

libsolv_a-interfaces_solvers.o: interfaces_solvers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interfaces_solvers.o -MD -MP -MF $(DEPDIR)/libsolv_a-interfaces_solvers.Tpo -c -o libsolv_a-interfaces_solvers.o `test -f 'interfaces_solvers.c' || echo '$(srcdir)/'`interfaces_solvers.c
	$(am__mv) $(DEPDIR)/libsolv_a-interfaces_solvers.Tpo $(DEPDIR)/libsolv_a-interfaces_solvers.Po
#	source='interfaces_solvers.c' object='libsolv_a-interfaces_solvers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interfaces_solvers.o `test -f 'interfaces_solvers.c' || echo '$(srcdir)/'`interfaces_solvers.c

libsolv_a-interfaces_solvers.obj: interfaces_solvers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interfaces_solvers.obj -MD -MP -MF $(DEPDIR)/libsolv_a-interfaces_solvers.Tpo -c -o libsolv_a-interfaces_solvers.obj `if test -f 'interfaces_solvers.c'; then $(CYGPATH_W) 'interfaces_solvers.c'; else $(CYGPATH_W) '$(srcdir)/interfaces_solvers.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-interfaces_solvers.Tpo $(DEPDIR)/libsolv_a-interfaces_solvers.Po
#	source='interfaces_solvers.c' object='libsolv_a-interfaces_solvers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interfaces_solvers.obj `if test -f 'interfaces_solvers.c'; then $(CYGPATH_W) 'interfaces_solvers.c'; else $(CYGPATH_W) '$(srcdir)/interfaces_solvers.c'; fi`

libsolv_a-convergence.o: convergence.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-convergence.o -MD -MP -MF $(DEPDIR)/libsolv_a-convergence.Tpo -c -o libsolv_a-convergence.o `test -f 'convergence.c' || echo '$(srcdir)/'`convergence.c
	$(am__mv) $(DEPDIR)/libsolv_a-convergence.Tpo $(DEPDIR)/libsolv_a-convergence.Po
#	source='convergence.c' object='libsolv_a-convergence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-convergence.o `test -f 'convergence.c' || echo '$(srcdir)/'`convergence.c

libsolv_a-convergence.obj: convergence.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-convergence.obj -MD -MP -MF $(DEPDIR)/libsolv_a-convergence.Tpo -c -o libsolv_a-convergence.obj `if test -f 'convergence.c'; then $(CYGPATH_W) 'convergence.c'; else $(CYGPATH_W) '$(srcdir)/convergence.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-convergence.Tpo $(DEPDIR)/libsolv_a-convergence.Po
#	source='convergence.c' object='libsolv_a-convergence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-convergence.obj `if test -f 'convergence.c'; then $(CYGPATH_W) 'convergence.c'; else $(CYGPATH_W) '$(srcdir)/convergence.c'; fi`

libsolv_a-gauss_siedel.o: gauss_siedel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gauss_siedel.o -MD -MP -MF $(DEPDIR)/libsolv_a-gauss_siedel.Tpo -c -o libsolv_a-gauss_siedel.o `test -f 'gauss_siedel.c' || echo '$(srcdir)/'`gauss_siedel.c
	$(am__mv) $(DEPDIR)/libsolv_a-gauss_siedel.Tpo $(DEPDIR)/libsolv_a-gauss_siedel.Po
#	source='gauss_siedel.c' object='libsolv_a-gauss_siedel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gauss_siedel.o `test -f 'gauss_siedel.c' || echo '$(srcdir)/'`gauss_siedel.c

libsolv_a-gauss_siedel.obj: gauss_siedel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gauss_siedel.obj -MD -MP -MF $(DEPDIR)/libsolv_a-gauss_siedel.Tpo -c -o libsolv_a-gauss_siedel.obj `if test -f 'gauss_siedel.c'; then $(CYGPATH_W) 'gauss_siedel.c'; else $(CYGPATH_W) '$(srcdir)/gauss_siedel.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-gauss_siedel.Tpo $(DEPDIR)/libsolv_a-gauss_siedel.Po
#	source='gauss_siedel.c' object='libsolv_a-gauss_siedel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gauss_siedel.obj `if test -f 'gauss_siedel.c'; then $(CYGPATH_W) 'gauss_siedel.c'; else $(CYGPATH_W) '$(srcdir)/gauss_siedel.c'; fi`

libsolv_a-jacobi.o: jacobi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-jacobi.o -MD -MP -MF $(DEPDIR)/libsolv_a-jacobi.Tpo -c -o libsolv_a-jacobi.o `test -f 'jacobi.c' || echo '$(srcdir)/'`jacobi.c
	$(am__mv) $(DEPDIR)/libsolv_a-jacobi.Tpo $(DEPDIR)/libsolv_a-jacobi.Po
#	source='jacobi.c' object='libsolv_a-jacobi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-jacobi.o `test -f 'jacobi.c' || echo '$(srcdir)/'`jacobi.c

libsolv_a-jacobi.obj: jacobi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-jacobi.obj -MD -MP -MF $(DEPDIR)/libsolv_a-jacobi.Tpo -c -o libsolv_a-jacobi.obj `if test -f 'jacobi.c'; then $(CYGPATH_W) 'jacobi.c'; else $(CYGPATH_W) '$(srcdir)/jacobi.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-jacobi.Tpo $(DEPDIR)/libsolv_a-jacobi.Po
#	source='jacobi.c' object='libsolv_a-jacobi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-jacobi.obj `if test -f 'jacobi.c'; then $(CYGPATH_W) 'jacobi.c'; else $(CYGPATH_W) '$(srcdir)/jacobi.c'; fi`

libsolv_a-sor.o: sor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-sor.o -MD -MP -MF $(DEPDIR)/libsolv_a-sor.Tpo -c -o libsolv_a-sor.o `test -f 'sor.c' || echo '$(srcdir)/'`sor.c
	$(am__mv) $(DEPDIR)/libsolv_a-sor.Tpo $(DEPDIR)/libsolv_a-sor.Po
#	source='sor.c' object='libsolv_a-sor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-sor.o `test -f 'sor.c' || echo '$(srcdir)/'`sor.c

libsolv_a-sor.obj: sor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-sor.obj -MD -MP -MF $(DEPDIR)/libsolv_a-sor.Tpo -c -o libsolv_a-sor.obj `if test -f 'sor.c'; then $(CYGPATH_W) 'sor.c'; else $(CYGPATH_W) '$(srcdir)/sor.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-sor.Tpo $(DEPDIR)/libsolv_a-sor.Po
#	source='sor.c' object='libsolv_a-sor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-sor.obj `if test -f 'sor.c'; then $(CYGPATH_W) 'sor.c'; else $(CYGPATH_W) '$(srcdir)/sor.c'; fi`

libsolv_a-power.o: power.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-power.o -MD -MP -MF $(DEPDIR)/libsolv_a-power.Tpo -c -o libsolv_a-power.o `test -f 'power.c' || echo '$(srcdir)/'`power.c
	$(am__mv) $(DEPDIR)/libsolv_a-power.Tpo $(DEPDIR)/libsolv_a-power.Po
#	source='power.c' object='libsolv_a-power.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-power.o `test -f 'power.c' || echo '$(srcdir)/'`power.c

libsolv_a-power.obj: power.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-power.obj -MD -MP -MF $(DEPDIR)/libsolv_a-power.Tpo -c -o libsolv_a-power.obj `if test -f 'power.c'; then $(CYGPATH_W) 'power.c'; else $(CYGPATH_W) '$(srcdir)/power.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-power.Tpo $(DEPDIR)/libsolv_a-power.Po
#	source='power.c' object='libsolv_a-power.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-power.obj `if test -f 'power.c'; then $(CYGPATH_W) 'power.c'; else $(CYGPATH_W) '$(srcdir)/power.c'; fi`

libsolv_a-gth_no_block.o: gth_no_block.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gth_no_block.o -MD -MP -MF $(DEPDIR)/libsolv_a-gth_no_block.Tpo -c -o libsolv_a-gth_no_block.o `test -f 'gth_no_block.c' || echo '$(srcdir)/'`gth_no_block.c
	$(am__mv) $(DEPDIR)/libsolv_a-gth_no_block.Tpo $(DEPDIR)/libsolv_a-gth_no_block.Po
#	source='gth_no_block.c' object='libsolv_a-gth_no_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gth_no_block.o `test -f 'gth_no_block.c' || echo '$(srcdir)/'`gth_no_block.c

libsolv_a-gth_no_block.obj: gth_no_block.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gth_no_block.obj -MD -MP -MF $(DEPDIR)/libsolv_a-gth_no_block.Tpo -c -o libsolv_a-gth_no_block.obj `if test -f 'gth_no_block.c'; then $(CYGPATH_W) 'gth_no_block.c'; else $(CYGPATH_W) '$(srcdir)/gth_no_block.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-gth_no_block.Tpo $(DEPDIR)/libsolv_a-gth_no_block.Po
#	source='gth_no_block.c' object='libsolv_a-gth_no_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gth_no_block.obj `if test -f 'gth_no_block.c'; then $(CYGPATH_W) 'gth_no_block.c'; else $(CYGPATH_W) '$(srcdir)/gth_no_block.c'; fi`

libsolv_a-gth.o: gth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gth.o -MD -MP -MF $(DEPDIR)/libsolv_a-gth.Tpo -c -o libsolv_a-gth.o `test -f 'gth.c' || echo '$(srcdir)/'`gth.c
	$(am__mv) $(DEPDIR)/libsolv_a-gth.Tpo $(DEPDIR)/libsolv_a-gth.Po
#	source='gth.c' object='libsolv_a-gth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gth.o `test -f 'gth.c' || echo '$(srcdir)/'`gth.c

libsolv_a-gth.obj: gth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-gth.obj -MD -MP -MF $(DEPDIR)/libsolv_a-gth.Tpo -c -o libsolv_a-gth.obj `if test -f 'gth.c'; then $(CYGPATH_W) 'gth.c'; else $(CYGPATH_W) '$(srcdir)/gth.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-gth.Tpo $(DEPDIR)/libsolv_a-gth.Po
#	source='gth.c' object='libsolv_a-gth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-gth.obj `if test -f 'gth.c'; then $(CYGPATH_W) 'gth.c'; else $(CYGPATH_W) '$(srcdir)/gth.c'; fi`

libsolv_a-uniformization.o: uniformization.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-uniformization.o -MD -MP -MF $(DEPDIR)/libsolv_a-uniformization.Tpo -c -o libsolv_a-uniformization.o `test -f 'uniformization.c' || echo '$(srcdir)/'`uniformization.c
	$(am__mv) $(DEPDIR)/libsolv_a-uniformization.Tpo $(DEPDIR)/libsolv_a-uniformization.Po
#	source='uniformization.c' object='libsolv_a-uniformization.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-uniformization.o `test -f 'uniformization.c' || echo '$(srcdir)/'`uniformization.c

libsolv_a-uniformization.obj: uniformization.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-uniformization.obj -MD -MP -MF $(DEPDIR)/libsolv_a-uniformization.Tpo -c -o libsolv_a-uniformization.obj `if test -f 'uniformization.c'; then $(CYGPATH_W) 'uniformization.c'; else $(CYGPATH_W) '$(srcdir)/uniformization.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-uniformization.Tpo $(DEPDIR)/libsolv_a-uniformization.Po
#	source='uniformization.c' object='libsolv_a-uniformization.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-uniformization.obj `if test -f 'uniformization.c'; then $(CYGPATH_W) 'uniformization.c'; else $(CYGPATH_W) '$(srcdir)/uniformization.c'; fi`

libsolv_a-breward.o: breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-breward.o -MD -MP -MF $(DEPDIR)/libsolv_a-breward.Tpo -c -o libsolv_a-breward.o `test -f 'breward.c' || echo '$(srcdir)/'`breward.c
	$(am__mv) $(DEPDIR)/libsolv_a-breward.Tpo $(DEPDIR)/libsolv_a-breward.Po
#	source='breward.c' object='libsolv_a-breward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-breward.o `test -f 'breward.c' || echo '$(srcdir)/'`breward.c

libsolv_a-breward.obj: breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-breward.obj -MD -MP -MF $(DEPDIR)/libsolv_a-breward.Tpo -c -o libsolv_a-breward.obj `if test -f 'breward.c'; then $(CYGPATH_W) 'breward.c'; else $(CYGPATH_W) '$(srcdir)/breward.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-breward.Tpo $(DEPDIR)/libsolv_a-breward.Po
#	source='breward.c' object='libsolv_a-breward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-breward.obj `if test -f 'breward.c'; then $(CYGPATH_W) 'breward.c'; else $(CYGPATH_W) '$(srcdir)/breward.c'; fi`

libsolv_a-interface_breward.o: interface_breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interface_breward.o -MD -MP -MF $(DEPDIR)/libsolv_a-interface_breward.Tpo -c -o libsolv_a-interface_breward.o `test -f 'interface_breward.c' || echo '$(srcdir)/'`interface_breward.c
	$(am__mv) $(DEPDIR)/libsolv_a-interface_breward.Tpo $(DEPDIR)/libsolv_a-interface_breward.Po
#	source='interface_breward.c' object='libsolv_a-interface_breward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interface_breward.o `test -f 'interface_breward.c' || echo '$(srcdir)/'`interface_breward.c

libsolv_a-interface_breward.obj: interface_breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interface_breward.obj -MD -MP -MF $(DEPDIR)/libsolv_a-interface_breward.Tpo -c -o libsolv_a-interface_breward.obj `if test -f 'interface_breward.c'; then $(CYGPATH_W) 'interface_breward.c'; else $(CYGPATH_W) '$(srcdir)/interface_breward.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-interface_breward.Tpo $(DEPDIR)/libsolv_a-interface_breward.Po
#	source='interface_breward.c' object='libsolv_a-interface_breward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interface_breward.obj `if test -f 'interface_breward.c'; then $(CYGPATH_W) 'interface_breward.c'; else $(CYGPATH_W) '$(srcdir)/interface_breward.c'; fi`

libsolv_a-bounds.o: bounds.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-bounds.o -MD -MP -MF $(DEPDIR)/libsolv_a-bounds.Tpo -c -o libsolv_a-bounds.o `test -f 'bounds.c' || echo '$(srcdir)/'`bounds.c
	$(am__mv) $(DEPDIR)/libsolv_a-bounds.Tpo $(DEPDIR)/libsolv_a-bounds.Po
#	source='bounds.c' object='libsolv_a-bounds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-bounds.o `test -f 'bounds.c' || echo '$(srcdir)/'`bounds.c

libsolv_a-bounds.obj: bounds.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-bounds.obj -MD -MP -MF $(DEPDIR)/libsolv_a-bounds.Tpo -c -o libsolv_a-bounds.obj `if test -f 'bounds.c'; then $(CYGPATH_W) 'bounds.c'; else $(CYGPATH_W) '$(srcdir)/bounds.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-bounds.Tpo $(DEPDIR)/libsolv_a-bounds.Po
#	source='bounds.c' object='libsolv_a-bounds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-bounds.obj `if test -f 'bounds.c'; then $(CYGPATH_W) 'bounds.c'; else $(CYGPATH_W) '$(srcdir)/bounds.c'; fi`

libsolv_a-parameters.o: parameters.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-parameters.o -MD -MP -MF $(DEPDIR)/libsolv_a-parameters.Tpo -c -o libsolv_a-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c
	$(am__mv) $(DEPDIR)/libsolv_a-parameters.Tpo $(DEPDIR)/libsolv_a-parameters.Po
#	source='parameters.c' object='libsolv_a-parameters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c

libsolv_a-parameters.obj: parameters.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-parameters.obj -MD -MP -MF $(DEPDIR)/libsolv_a-parameters.Tpo -c -o libsolv_a-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-parameters.Tpo $(DEPDIR)/libsolv_a-parameters.Po
#	source='parameters.c' object='libsolv_a-parameters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`

libsolv_a-interface_omega.o: interface_omega.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interface_omega.o -MD -MP -MF $(DEPDIR)/libsolv_a-interface_omega.Tpo -c -o libsolv_a-interface_omega.o `test -f 'interface_omega.c' || echo '$(srcdir)/'`interface_omega.c
	$(am__mv) $(DEPDIR)/libsolv_a-interface_omega.Tpo $(DEPDIR)/libsolv_a-interface_omega.Po
#	source='interface_omega.c' object='libsolv_a-interface_omega.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interface_omega.o `test -f 'interface_omega.c' || echo '$(srcdir)/'`interface_omega.c

libsolv_a-interface_omega.obj: interface_omega.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-interface_omega.obj -MD -MP -MF $(DEPDIR)/libsolv_a-interface_omega.Tpo -c -o libsolv_a-interface_omega.obj `if test -f 'interface_omega.c'; then $(CYGPATH_W) 'interface_omega.c'; else $(CYGPATH_W) '$(srcdir)/interface_omega.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-interface_omega.Tpo $(DEPDIR)/libsolv_a-interface_omega.Po
#	source='interface_omega.c' object='libsolv_a-interface_omega.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-interface_omega.obj `if test -f 'interface_omega.c'; then $(CYGPATH_W) 'interface_omega.c'; else $(CYGPATH_W) '$(srcdir)/interface_omega.c'; fi`

libsolv_a-operational_time.o: operational_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-operational_time.o -MD -MP -MF $(DEPDIR)/libsolv_a-operational_time.Tpo -c -o libsolv_a-operational_time.o `test -f 'operational_time.c' || echo '$(srcdir)/'`operational_time.c
	$(am__mv) $(DEPDIR)/libsolv_a-operational_time.Tpo $(DEPDIR)/libsolv_a-operational_time.Po
#	source='operational_time.c' object='libsolv_a-operational_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-operational_time.o `test -f 'operational_time.c' || echo '$(srcdir)/'`operational_time.c

libsolv_a-operational_time.obj: operational_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-operational_time.obj -MD -MP -MF $(DEPDIR)/libsolv_a-operational_time.Tpo -c -o libsolv_a-operational_time.obj `if test -f 'operational_time.c'; then $(CYGPATH_W) 'operational_time.c'; else $(CYGPATH_W) '$(srcdir)/operational_time.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-operational_time.Tpo $(DEPDIR)/libsolv_a-operational_time.Po
#	source='operational_time.c' object='libsolv_a-operational_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-operational_time.obj `if test -f 'operational_time.c'; then $(CYGPATH_W) 'operational_time.c'; else $(CYGPATH_W) '$(srcdir)/operational_time.c'; fi`

libsolv_a-det_event.o: det_event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-det_event.o -MD -MP -MF $(DEPDIR)/libsolv_a-det_event.Tpo -c -o libsolv_a-det_event.o `test -f 'det_event.c' || echo '$(srcdir)/'`det_event.c
	$(am__mv) $(DEPDIR)/libsolv_a-det_event.Tpo $(DEPDIR)/libsolv_a-det_event.Po
#	source='det_event.c' object='libsolv_a-det_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-det_event.o `test -f 'det_event.c' || echo '$(srcdir)/'`det_event.c

libsolv_a-det_event.obj: det_event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-det_event.obj -MD -MP -MF $(DEPDIR)/libsolv_a-det_event.Tpo -c -o libsolv_a-det_event.obj `if test -f 'det_event.c'; then $(CYGPATH_W) 'det_event.c'; else $(CYGPATH_W) '$(srcdir)/det_event.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-det_event.Tpo $(DEPDIR)/libsolv_a-det_event.Po
#	source='det_event.c' object='libsolv_a-det_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-det_event.obj `if test -f 'det_event.c'; then $(CYGPATH_W) 'det_event.c'; else $(CYGPATH_W) '$(srcdir)/det_event.c'; fi`

libsolv_a-expected_trans_reward.o: expected_trans_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-expected_trans_reward.o -MD -MP -MF $(DEPDIR)/libsolv_a-expected_trans_reward.Tpo -c -o libsolv_a-expected_trans_reward.o `test -f 'expected_trans_reward.c' || echo '$(srcdir)/'`expected_trans_reward.c
	$(am__mv) $(DEPDIR)/libsolv_a-expected_trans_reward.Tpo $(DEPDIR)/libsolv_a-expected_trans_reward.Po
#	source='expected_trans_reward.c' object='libsolv_a-expected_trans_reward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-expected_trans_reward.o `test -f 'expected_trans_reward.c' || echo '$(srcdir)/'`expected_trans_reward.c

libsolv_a-expected_trans_reward.obj: expected_trans_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-expected_trans_reward.obj -MD -MP -MF $(DEPDIR)/libsolv_a-expected_trans_reward.Tpo -c -o libsolv_a-expected_trans_reward.obj `if test -f 'expected_trans_reward.c'; then $(CYGPATH_W) 'expected_trans_reward.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_reward.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-expected_trans_reward.Tpo $(DEPDIR)/libsolv_a-expected_trans_reward.Po
#	source='expected_trans_reward.c' object='libsolv_a-expected_trans_reward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-expected_trans_reward.obj `if test -f 'expected_trans_reward.c'; then $(CYGPATH_W) 'expected_trans_reward.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_reward.c'; fi`

libsolv_a-expected_trans_imp_rew.o: expected_trans_imp_rew.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-expected_trans_imp_rew.o -MD -MP -MF $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Tpo -c -o libsolv_a-expected_trans_imp_rew.o `test -f 'expected_trans_imp_rew.c' || echo '$(srcdir)/'`expected_trans_imp_rew.c
	$(am__mv) $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Tpo $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Po
#	source='expected_trans_imp_rew.c' object='libsolv_a-expected_trans_imp_rew.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-expected_trans_imp_rew.o `test -f 'expected_trans_imp_rew.c' || echo '$(srcdir)/'`expected_trans_imp_rew.c

libsolv_a-expected_trans_imp_rew.obj: expected_trans_imp_rew.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-expected_trans_imp_rew.obj -MD -MP -MF $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Tpo -c -o libsolv_a-expected_trans_imp_rew.obj `if test -f 'expected_trans_imp_rew.c'; then $(CYGPATH_W) 'expected_trans_imp_rew.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_imp_rew.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Tpo $(DEPDIR)/libsolv_a-expected_trans_imp_rew.Po
#	source='expected_trans_imp_rew.c' object='libsolv_a-expected_trans_imp_rew.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-expected_trans_imp_rew.obj `if test -f 'expected_trans_imp_rew.c'; then $(CYGPATH_W) 'expected_trans_imp_rew.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_imp_rew.c'; fi`

libsolv_a-ImpMatrix.o: ImpMatrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-ImpMatrix.o -MD -MP -MF $(DEPDIR)/libsolv_a-ImpMatrix.Tpo -c -o libsolv_a-ImpMatrix.o `test -f 'ImpMatrix.c' || echo '$(srcdir)/'`ImpMatrix.c
	$(am__mv) $(DEPDIR)/libsolv_a-ImpMatrix.Tpo $(DEPDIR)/libsolv_a-ImpMatrix.Po
#	source='ImpMatrix.c' object='libsolv_a-ImpMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-ImpMatrix.o `test -f 'ImpMatrix.c' || echo '$(srcdir)/'`ImpMatrix.c

libsolv_a-ImpMatrix.obj: ImpMatrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-ImpMatrix.obj -MD -MP -MF $(DEPDIR)/libsolv_a-ImpMatrix.Tpo -c -o libsolv_a-ImpMatrix.obj `if test -f 'ImpMatrix.c'; then $(CYGPATH_W) 'ImpMatrix.c'; else $(CYGPATH_W) '$(srcdir)/ImpMatrix.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-ImpMatrix.Tpo $(DEPDIR)/libsolv_a-ImpMatrix.Po
#	source='ImpMatrix.c' object='libsolv_a-ImpMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-ImpMatrix.obj `if test -f 'ImpMatrix.c'; then $(CYGPATH_W) 'ImpMatrix.c'; else $(CYGPATH_W) '$(srcdir)/ImpMatrix.c'; fi`

libsolv_a-rate_cumulative_approximation.o: rate_cumulative_approximation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-rate_cumulative_approximation.o -MD -MP -MF $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Tpo -c -o libsolv_a-rate_cumulative_approximation.o `test -f 'rate_cumulative_approximation.c' || echo '$(srcdir)/'`rate_cumulative_approximation.c
	$(am__mv) $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Tpo $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Po
#	source='rate_cumulative_approximation.c' object='libsolv_a-rate_cumulative_approximation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-rate_cumulative_approximation.o `test -f 'rate_cumulative_approximation.c' || echo '$(srcdir)/'`rate_cumulative_approximation.c

libsolv_a-rate_cumulative_approximation.obj: rate_cumulative_approximation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-rate_cumulative_approximation.obj -MD -MP -MF $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Tpo -c -o libsolv_a-rate_cumulative_approximation.obj `if test -f 'rate_cumulative_approximation.c'; then $(CYGPATH_W) 'rate_cumulative_approximation.c'; else $(CYGPATH_W) '$(srcdir)/rate_cumulative_approximation.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Tpo $(DEPDIR)/libsolv_a-rate_cumulative_approximation.Po
#	source='rate_cumulative_approximation.c' object='libsolv_a-rate_cumulative_approximation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-rate_cumulative_approximation.obj `if test -f 'rate_cumulative_approximation.c'; then $(CYGPATH_W) 'rate_cumulative_approximation.c'; else $(CYGPATH_W) '$(srcdir)/rate_cumulative_approximation.c'; fi`

libsolv_a-cumulative_reward_iterative.o: cumulative_reward_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-cumulative_reward_iterative.o -MD -MP -MF $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Tpo -c -o libsolv_a-cumulative_reward_iterative.o `test -f 'cumulative_reward_iterative.c' || echo '$(srcdir)/'`cumulative_reward_iterative.c
	$(am__mv) $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Tpo $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Po
#	source='cumulative_reward_iterative.c' object='libsolv_a-cumulative_reward_iterative.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-cumulative_reward_iterative.o `test -f 'cumulative_reward_iterative.c' || echo '$(srcdir)/'`cumulative_reward_iterative.c

libsolv_a-cumulative_reward_iterative.obj: cumulative_reward_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-cumulative_reward_iterative.obj -MD -MP -MF $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Tpo -c -o libsolv_a-cumulative_reward_iterative.obj `if test -f 'cumulative_reward_iterative.c'; then $(CYGPATH_W) 'cumulative_reward_iterative.c'; else $(CYGPATH_W) '$(srcdir)/cumulative_reward_iterative.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Tpo $(DEPDIR)/libsolv_a-cumulative_reward_iterative.Po
#	source='cumulative_reward_iterative.c' object='libsolv_a-cumulative_reward_iterative.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-cumulative_reward_iterative.obj `if test -f 'cumulative_reward_iterative.c'; then $(CYGPATH_W) 'cumulative_reward_iterative.c'; else $(CYGPATH_W) '$(srcdir)/cumulative_reward_iterative.c'; fi`

libsolv_a-sor-flex.o: sor-flex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-sor-flex.o -MD -MP -MF $(DEPDIR)/libsolv_a-sor-flex.Tpo -c -o libsolv_a-sor-flex.o `test -f 'sor-flex.c' || echo '$(srcdir)/'`sor-flex.c
	$(am__mv) $(DEPDIR)/libsolv_a-sor-flex.Tpo $(DEPDIR)/libsolv_a-sor-flex.Po
#	source='sor-flex.c' object='libsolv_a-sor-flex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-sor-flex.o `test -f 'sor-flex.c' || echo '$(srcdir)/'`sor-flex.c

libsolv_a-sor-flex.obj: sor-flex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-sor-flex.obj -MD -MP -MF $(DEPDIR)/libsolv_a-sor-flex.Tpo -c -o libsolv_a-sor-flex.obj `if test -f 'sor-flex.c'; then $(CYGPATH_W) 'sor-flex.c'; else $(CYGPATH_W) '$(srcdir)/sor-flex.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-sor-flex.Tpo $(DEPDIR)/libsolv_a-sor-flex.Po
#	source='sor-flex.c' object='libsolv_a-sor-flex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-sor-flex.obj `if test -f 'sor-flex.c'; then $(CYGPATH_W) 'sor-flex.c'; else $(CYGPATH_W) '$(srcdir)/sor-flex.c'; fi`

libsolv_a-iterative_methods_reward.o: iterative_methods_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-iterative_methods_reward.o -MD -MP -MF $(DEPDIR)/libsolv_a-iterative_methods_reward.Tpo -c -o libsolv_a-iterative_methods_reward.o `test -f 'iterative_methods_reward.c' || echo '$(srcdir)/'`iterative_methods_reward.c
	$(am__mv) $(DEPDIR)/libsolv_a-iterative_methods_reward.Tpo $(DEPDIR)/libsolv_a-iterative_methods_reward.Po
#	source='iterative_methods_reward.c' object='libsolv_a-iterative_methods_reward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-iterative_methods_reward.o `test -f 'iterative_methods_reward.c' || echo '$(srcdir)/'`iterative_methods_reward.c

libsolv_a-iterative_methods_reward.obj: iterative_methods_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-iterative_methods_reward.obj -MD -MP -MF $(DEPDIR)/libsolv_a-iterative_methods_reward.Tpo -c -o libsolv_a-iterative_methods_reward.obj `if test -f 'iterative_methods_reward.c'; then $(CYGPATH_W) 'iterative_methods_reward.c'; else $(CYGPATH_W) '$(srcdir)/iterative_methods_reward.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-iterative_methods_reward.Tpo $(DEPDIR)/libsolv_a-iterative_methods_reward.Po
#	source='iterative_methods_reward.c' object='libsolv_a-iterative_methods_reward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-iterative_methods_reward.obj `if test -f 'iterative_methods_reward.c'; then $(CYGPATH_W) 'iterative_methods_reward.c'; else $(CYGPATH_W) '$(srcdir)/iterative_methods_reward.c'; fi`

libsolv_a-functions_espa.o: functions_espa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-functions_espa.o -MD -MP -MF $(DEPDIR)/libsolv_a-functions_espa.Tpo -c -o libsolv_a-functions_espa.o `test -f 'functions_espa.c' || echo '$(srcdir)/'`functions_espa.c
	$(am__mv) $(DEPDIR)/libsolv_a-functions_espa.Tpo $(DEPDIR)/libsolv_a-functions_espa.Po
#	source='functions_espa.c' object='libsolv_a-functions_espa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-functions_espa.o `test -f 'functions_espa.c' || echo '$(srcdir)/'`functions_espa.c

libsolv_a-functions_espa.obj: functions_espa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-functions_espa.obj -MD -MP -MF $(DEPDIR)/libsolv_a-functions_espa.Tpo -c -o libsolv_a-functions_espa.obj `if test -f 'functions_espa.c'; then $(CYGPATH_W) 'functions_espa.c'; else $(CYGPATH_W) '$(srcdir)/functions_espa.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-functions_espa.Tpo $(DEPDIR)/libsolv_a-functions_espa.Po
#	source='functions_espa.c' object='libsolv_a-functions_espa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-functions_espa.obj `if test -f 'functions_espa.c'; then $(CYGPATH_W) 'functions_espa.c'; else $(CYGPATH_W) '$(srcdir)/functions_espa.c'; fi`

libsolv_a-espa_direct.o: espa_direct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-espa_direct.o -MD -MP -MF $(DEPDIR)/libsolv_a-espa_direct.Tpo -c -o libsolv_a-espa_direct.o `test -f 'espa_direct.c' || echo '$(srcdir)/'`espa_direct.c
	$(am__mv) $(DEPDIR)/libsolv_a-espa_direct.Tpo $(DEPDIR)/libsolv_a-espa_direct.Po
#	source='espa_direct.c' object='libsolv_a-espa_direct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-espa_direct.o `test -f 'espa_direct.c' || echo '$(srcdir)/'`espa_direct.c

libsolv_a-espa_direct.obj: espa_direct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-espa_direct.obj -MD -MP -MF $(DEPDIR)/libsolv_a-espa_direct.Tpo -c -o libsolv_a-espa_direct.obj `if test -f 'espa_direct.c'; then $(CYGPATH_W) 'espa_direct.c'; else $(CYGPATH_W) '$(srcdir)/espa_direct.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-espa_direct.Tpo $(DEPDIR)/libsolv_a-espa_direct.Po
#	source='espa_direct.c' object='libsolv_a-espa_direct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-espa_direct.obj `if test -f 'espa_direct.c'; then $(CYGPATH_W) 'espa_direct.c'; else $(CYGPATH_W) '$(srcdir)/espa_direct.c'; fi`

libsolv_a-espa_iterative.o: espa_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-espa_iterative.o -MD -MP -MF $(DEPDIR)/libsolv_a-espa_iterative.Tpo -c -o libsolv_a-espa_iterative.o `test -f 'espa_iterative.c' || echo '$(srcdir)/'`espa_iterative.c
	$(am__mv) $(DEPDIR)/libsolv_a-espa_iterative.Tpo $(DEPDIR)/libsolv_a-espa_iterative.Po
#	source='espa_iterative.c' object='libsolv_a-espa_iterative.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-espa_iterative.o `test -f 'espa_iterative.c' || echo '$(srcdir)/'`espa_iterative.c

libsolv_a-espa_iterative.obj: espa_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libsolv_a-espa_iterative.obj -MD -MP -MF $(DEPDIR)/libsolv_a-espa_iterative.Tpo -c -o libsolv_a-espa_iterative.obj `if test -f 'espa_iterative.c'; then $(CYGPATH_W) 'espa_iterative.c'; else $(CYGPATH_W) '$(srcdir)/espa_iterative.c'; fi`
	$(am__mv) $(DEPDIR)/libsolv_a-espa_iterative.Tpo $(DEPDIR)/libsolv_a-espa_iterative.Po
#	source='espa_iterative.c' object='libsolv_a-espa_iterative.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsolv_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libsolv_a-espa_iterative.obj `if test -f 'espa_iterative.c'; then $(CYGPATH_W) 'espa_iterative.c'; else $(CYGPATH_W) '$(srcdir)/espa_iterative.c'; fi`

solv-solv.o: solv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-solv.o -MD -MP -MF $(DEPDIR)/solv-solv.Tpo -c -o solv-solv.o `test -f 'solv.c' || echo '$(srcdir)/'`solv.c
	$(am__mv) $(DEPDIR)/solv-solv.Tpo $(DEPDIR)/solv-solv.Po
#	source='solv.c' object='solv-solv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-solv.o `test -f 'solv.c' || echo '$(srcdir)/'`solv.c

solv-solv.obj: solv.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-solv.obj -MD -MP -MF $(DEPDIR)/solv-solv.Tpo -c -o solv-solv.obj `if test -f 'solv.c'; then $(CYGPATH_W) 'solv.c'; else $(CYGPATH_W) '$(srcdir)/solv.c'; fi`
	$(am__mv) $(DEPDIR)/solv-solv.Tpo $(DEPDIR)/solv-solv.Po
#	source='solv.c' object='solv-solv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-solv.obj `if test -f 'solv.c'; then $(CYGPATH_W) 'solv.c'; else $(CYGPATH_W) '$(srcdir)/solv.c'; fi`

solv-interfaces_solvers.o: interfaces_solvers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interfaces_solvers.o -MD -MP -MF $(DEPDIR)/solv-interfaces_solvers.Tpo -c -o solv-interfaces_solvers.o `test -f 'interfaces_solvers.c' || echo '$(srcdir)/'`interfaces_solvers.c
	$(am__mv) $(DEPDIR)/solv-interfaces_solvers.Tpo $(DEPDIR)/solv-interfaces_solvers.Po
#	source='interfaces_solvers.c' object='solv-interfaces_solvers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interfaces_solvers.o `test -f 'interfaces_solvers.c' || echo '$(srcdir)/'`interfaces_solvers.c

solv-interfaces_solvers.obj: interfaces_solvers.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interfaces_solvers.obj -MD -MP -MF $(DEPDIR)/solv-interfaces_solvers.Tpo -c -o solv-interfaces_solvers.obj `if test -f 'interfaces_solvers.c'; then $(CYGPATH_W) 'interfaces_solvers.c'; else $(CYGPATH_W) '$(srcdir)/interfaces_solvers.c'; fi`
	$(am__mv) $(DEPDIR)/solv-interfaces_solvers.Tpo $(DEPDIR)/solv-interfaces_solvers.Po
#	source='interfaces_solvers.c' object='solv-interfaces_solvers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interfaces_solvers.obj `if test -f 'interfaces_solvers.c'; then $(CYGPATH_W) 'interfaces_solvers.c'; else $(CYGPATH_W) '$(srcdir)/interfaces_solvers.c'; fi`

solv-convergence.o: convergence.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-convergence.o -MD -MP -MF $(DEPDIR)/solv-convergence.Tpo -c -o solv-convergence.o `test -f 'convergence.c' || echo '$(srcdir)/'`convergence.c
	$(am__mv) $(DEPDIR)/solv-convergence.Tpo $(DEPDIR)/solv-convergence.Po
#	source='convergence.c' object='solv-convergence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-convergence.o `test -f 'convergence.c' || echo '$(srcdir)/'`convergence.c

solv-convergence.obj: convergence.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-convergence.obj -MD -MP -MF $(DEPDIR)/solv-convergence.Tpo -c -o solv-convergence.obj `if test -f 'convergence.c'; then $(CYGPATH_W) 'convergence.c'; else $(CYGPATH_W) '$(srcdir)/convergence.c'; fi`
	$(am__mv) $(DEPDIR)/solv-convergence.Tpo $(DEPDIR)/solv-convergence.Po
#	source='convergence.c' object='solv-convergence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-convergence.obj `if test -f 'convergence.c'; then $(CYGPATH_W) 'convergence.c'; else $(CYGPATH_W) '$(srcdir)/convergence.c'; fi`

solv-gauss_siedel.o: gauss_siedel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gauss_siedel.o -MD -MP -MF $(DEPDIR)/solv-gauss_siedel.Tpo -c -o solv-gauss_siedel.o `test -f 'gauss_siedel.c' || echo '$(srcdir)/'`gauss_siedel.c
	$(am__mv) $(DEPDIR)/solv-gauss_siedel.Tpo $(DEPDIR)/solv-gauss_siedel.Po
#	source='gauss_siedel.c' object='solv-gauss_siedel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gauss_siedel.o `test -f 'gauss_siedel.c' || echo '$(srcdir)/'`gauss_siedel.c

solv-gauss_siedel.obj: gauss_siedel.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gauss_siedel.obj -MD -MP -MF $(DEPDIR)/solv-gauss_siedel.Tpo -c -o solv-gauss_siedel.obj `if test -f 'gauss_siedel.c'; then $(CYGPATH_W) 'gauss_siedel.c'; else $(CYGPATH_W) '$(srcdir)/gauss_siedel.c'; fi`
	$(am__mv) $(DEPDIR)/solv-gauss_siedel.Tpo $(DEPDIR)/solv-gauss_siedel.Po
#	source='gauss_siedel.c' object='solv-gauss_siedel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gauss_siedel.obj `if test -f 'gauss_siedel.c'; then $(CYGPATH_W) 'gauss_siedel.c'; else $(CYGPATH_W) '$(srcdir)/gauss_siedel.c'; fi`

solv-jacobi.o: jacobi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-jacobi.o -MD -MP -MF $(DEPDIR)/solv-jacobi.Tpo -c -o solv-jacobi.o `test -f 'jacobi.c' || echo '$(srcdir)/'`jacobi.c
	$(am__mv) $(DEPDIR)/solv-jacobi.Tpo $(DEPDIR)/solv-jacobi.Po
#	source='jacobi.c' object='solv-jacobi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-jacobi.o `test -f 'jacobi.c' || echo '$(srcdir)/'`jacobi.c

solv-jacobi.obj: jacobi.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-jacobi.obj -MD -MP -MF $(DEPDIR)/solv-jacobi.Tpo -c -o solv-jacobi.obj `if test -f 'jacobi.c'; then $(CYGPATH_W) 'jacobi.c'; else $(CYGPATH_W) '$(srcdir)/jacobi.c'; fi`
	$(am__mv) $(DEPDIR)/solv-jacobi.Tpo $(DEPDIR)/solv-jacobi.Po
#	source='jacobi.c' object='solv-jacobi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-jacobi.obj `if test -f 'jacobi.c'; then $(CYGPATH_W) 'jacobi.c'; else $(CYGPATH_W) '$(srcdir)/jacobi.c'; fi`

solv-sor.o: sor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-sor.o -MD -MP -MF $(DEPDIR)/solv-sor.Tpo -c -o solv-sor.o `test -f 'sor.c' || echo '$(srcdir)/'`sor.c
	$(am__mv) $(DEPDIR)/solv-sor.Tpo $(DEPDIR)/solv-sor.Po
#	source='sor.c' object='solv-sor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-sor.o `test -f 'sor.c' || echo '$(srcdir)/'`sor.c

solv-sor.obj: sor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-sor.obj -MD -MP -MF $(DEPDIR)/solv-sor.Tpo -c -o solv-sor.obj `if test -f 'sor.c'; then $(CYGPATH_W) 'sor.c'; else $(CYGPATH_W) '$(srcdir)/sor.c'; fi`
	$(am__mv) $(DEPDIR)/solv-sor.Tpo $(DEPDIR)/solv-sor.Po
#	source='sor.c' object='solv-sor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-sor.obj `if test -f 'sor.c'; then $(CYGPATH_W) 'sor.c'; else $(CYGPATH_W) '$(srcdir)/sor.c'; fi`

solv-power.o: power.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-power.o -MD -MP -MF $(DEPDIR)/solv-power.Tpo -c -o solv-power.o `test -f 'power.c' || echo '$(srcdir)/'`power.c
	$(am__mv) $(DEPDIR)/solv-power.Tpo $(DEPDIR)/solv-power.Po
#	source='power.c' object='solv-power.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-power.o `test -f 'power.c' || echo '$(srcdir)/'`power.c

solv-power.obj: power.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-power.obj -MD -MP -MF $(DEPDIR)/solv-power.Tpo -c -o solv-power.obj `if test -f 'power.c'; then $(CYGPATH_W) 'power.c'; else $(CYGPATH_W) '$(srcdir)/power.c'; fi`
	$(am__mv) $(DEPDIR)/solv-power.Tpo $(DEPDIR)/solv-power.Po
#	source='power.c' object='solv-power.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-power.obj `if test -f 'power.c'; then $(CYGPATH_W) 'power.c'; else $(CYGPATH_W) '$(srcdir)/power.c'; fi`

solv-gth_no_block.o: gth_no_block.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gth_no_block.o -MD -MP -MF $(DEPDIR)/solv-gth_no_block.Tpo -c -o solv-gth_no_block.o `test -f 'gth_no_block.c' || echo '$(srcdir)/'`gth_no_block.c
	$(am__mv) $(DEPDIR)/solv-gth_no_block.Tpo $(DEPDIR)/solv-gth_no_block.Po
#	source='gth_no_block.c' object='solv-gth_no_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gth_no_block.o `test -f 'gth_no_block.c' || echo '$(srcdir)/'`gth_no_block.c

solv-gth_no_block.obj: gth_no_block.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gth_no_block.obj -MD -MP -MF $(DEPDIR)/solv-gth_no_block.Tpo -c -o solv-gth_no_block.obj `if test -f 'gth_no_block.c'; then $(CYGPATH_W) 'gth_no_block.c'; else $(CYGPATH_W) '$(srcdir)/gth_no_block.c'; fi`
	$(am__mv) $(DEPDIR)/solv-gth_no_block.Tpo $(DEPDIR)/solv-gth_no_block.Po
#	source='gth_no_block.c' object='solv-gth_no_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gth_no_block.obj `if test -f 'gth_no_block.c'; then $(CYGPATH_W) 'gth_no_block.c'; else $(CYGPATH_W) '$(srcdir)/gth_no_block.c'; fi`

solv-gth.o: gth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gth.o -MD -MP -MF $(DEPDIR)/solv-gth.Tpo -c -o solv-gth.o `test -f 'gth.c' || echo '$(srcdir)/'`gth.c
	$(am__mv) $(DEPDIR)/solv-gth.Tpo $(DEPDIR)/solv-gth.Po
#	source='gth.c' object='solv-gth.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gth.o `test -f 'gth.c' || echo '$(srcdir)/'`gth.c

solv-gth.obj: gth.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-gth.obj -MD -MP -MF $(DEPDIR)/solv-gth.Tpo -c -o solv-gth.obj `if test -f 'gth.c'; then $(CYGPATH_W) 'gth.c'; else $(CYGPATH_W) '$(srcdir)/gth.c'; fi`
	$(am__mv) $(DEPDIR)/solv-gth.Tpo $(DEPDIR)/solv-gth.Po
#	source='gth.c' object='solv-gth.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-gth.obj `if test -f 'gth.c'; then $(CYGPATH_W) 'gth.c'; else $(CYGPATH_W) '$(srcdir)/gth.c'; fi`

solv-uniformization.o: uniformization.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-uniformization.o -MD -MP -MF $(DEPDIR)/solv-uniformization.Tpo -c -o solv-uniformization.o `test -f 'uniformization.c' || echo '$(srcdir)/'`uniformization.c
	$(am__mv) $(DEPDIR)/solv-uniformization.Tpo $(DEPDIR)/solv-uniformization.Po
#	source='uniformization.c' object='solv-uniformization.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-uniformization.o `test -f 'uniformization.c' || echo '$(srcdir)/'`uniformization.c

solv-uniformization.obj: uniformization.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-uniformization.obj -MD -MP -MF $(DEPDIR)/solv-uniformization.Tpo -c -o solv-uniformization.obj `if test -f 'uniformization.c'; then $(CYGPATH_W) 'uniformization.c'; else $(CYGPATH_W) '$(srcdir)/uniformization.c'; fi`
	$(am__mv) $(DEPDIR)/solv-uniformization.Tpo $(DEPDIR)/solv-uniformization.Po
#	source='uniformization.c' object='solv-uniformization.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-uniformization.obj `if test -f 'uniformization.c'; then $(CYGPATH_W) 'uniformization.c'; else $(CYGPATH_W) '$(srcdir)/uniformization.c'; fi`

solv-breward.o: breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-breward.o -MD -MP -MF $(DEPDIR)/solv-breward.Tpo -c -o solv-breward.o `test -f 'breward.c' || echo '$(srcdir)/'`breward.c
	$(am__mv) $(DEPDIR)/solv-breward.Tpo $(DEPDIR)/solv-breward.Po
#	source='breward.c' object='solv-breward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-breward.o `test -f 'breward.c' || echo '$(srcdir)/'`breward.c

solv-breward.obj: breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-breward.obj -MD -MP -MF $(DEPDIR)/solv-breward.Tpo -c -o solv-breward.obj `if test -f 'breward.c'; then $(CYGPATH_W) 'breward.c'; else $(CYGPATH_W) '$(srcdir)/breward.c'; fi`
	$(am__mv) $(DEPDIR)/solv-breward.Tpo $(DEPDIR)/solv-breward.Po
#	source='breward.c' object='solv-breward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-breward.obj `if test -f 'breward.c'; then $(CYGPATH_W) 'breward.c'; else $(CYGPATH_W) '$(srcdir)/breward.c'; fi`

solv-interface_breward.o: interface_breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interface_breward.o -MD -MP -MF $(DEPDIR)/solv-interface_breward.Tpo -c -o solv-interface_breward.o `test -f 'interface_breward.c' || echo '$(srcdir)/'`interface_breward.c
	$(am__mv) $(DEPDIR)/solv-interface_breward.Tpo $(DEPDIR)/solv-interface_breward.Po
#	source='interface_breward.c' object='solv-interface_breward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interface_breward.o `test -f 'interface_breward.c' || echo '$(srcdir)/'`interface_breward.c

solv-interface_breward.obj: interface_breward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interface_breward.obj -MD -MP -MF $(DEPDIR)/solv-interface_breward.Tpo -c -o solv-interface_breward.obj `if test -f 'interface_breward.c'; then $(CYGPATH_W) 'interface_breward.c'; else $(CYGPATH_W) '$(srcdir)/interface_breward.c'; fi`
	$(am__mv) $(DEPDIR)/solv-interface_breward.Tpo $(DEPDIR)/solv-interface_breward.Po
#	source='interface_breward.c' object='solv-interface_breward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interface_breward.obj `if test -f 'interface_breward.c'; then $(CYGPATH_W) 'interface_breward.c'; else $(CYGPATH_W) '$(srcdir)/interface_breward.c'; fi`

solv-bounds.o: bounds.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-bounds.o -MD -MP -MF $(DEPDIR)/solv-bounds.Tpo -c -o solv-bounds.o `test -f 'bounds.c' || echo '$(srcdir)/'`bounds.c
	$(am__mv) $(DEPDIR)/solv-bounds.Tpo $(DEPDIR)/solv-bounds.Po
#	source='bounds.c' object='solv-bounds.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-bounds.o `test -f 'bounds.c' || echo '$(srcdir)/'`bounds.c

solv-bounds.obj: bounds.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-bounds.obj -MD -MP -MF $(DEPDIR)/solv-bounds.Tpo -c -o solv-bounds.obj `if test -f 'bounds.c'; then $(CYGPATH_W) 'bounds.c'; else $(CYGPATH_W) '$(srcdir)/bounds.c'; fi`
	$(am__mv) $(DEPDIR)/solv-bounds.Tpo $(DEPDIR)/solv-bounds.Po
#	source='bounds.c' object='solv-bounds.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-bounds.obj `if test -f 'bounds.c'; then $(CYGPATH_W) 'bounds.c'; else $(CYGPATH_W) '$(srcdir)/bounds.c'; fi`

solv-parameters.o: parameters.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-parameters.o -MD -MP -MF $(DEPDIR)/solv-parameters.Tpo -c -o solv-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c
	$(am__mv) $(DEPDIR)/solv-parameters.Tpo $(DEPDIR)/solv-parameters.Po
#	source='parameters.c' object='solv-parameters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-parameters.o `test -f 'parameters.c' || echo '$(srcdir)/'`parameters.c

solv-parameters.obj: parameters.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-parameters.obj -MD -MP -MF $(DEPDIR)/solv-parameters.Tpo -c -o solv-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`
	$(am__mv) $(DEPDIR)/solv-parameters.Tpo $(DEPDIR)/solv-parameters.Po
#	source='parameters.c' object='solv-parameters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-parameters.obj `if test -f 'parameters.c'; then $(CYGPATH_W) 'parameters.c'; else $(CYGPATH_W) '$(srcdir)/parameters.c'; fi`

solv-interface_omega.o: interface_omega.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interface_omega.o -MD -MP -MF $(DEPDIR)/solv-interface_omega.Tpo -c -o solv-interface_omega.o `test -f 'interface_omega.c' || echo '$(srcdir)/'`interface_omega.c
	$(am__mv) $(DEPDIR)/solv-interface_omega.Tpo $(DEPDIR)/solv-interface_omega.Po
#	source='interface_omega.c' object='solv-interface_omega.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interface_omega.o `test -f 'interface_omega.c' || echo '$(srcdir)/'`interface_omega.c

solv-interface_omega.obj: interface_omega.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-interface_omega.obj -MD -MP -MF $(DEPDIR)/solv-interface_omega.Tpo -c -o solv-interface_omega.obj `if test -f 'interface_omega.c'; then $(CYGPATH_W) 'interface_omega.c'; else $(CYGPATH_W) '$(srcdir)/interface_omega.c'; fi`
	$(am__mv) $(DEPDIR)/solv-interface_omega.Tpo $(DEPDIR)/solv-interface_omega.Po
#	source='interface_omega.c' object='solv-interface_omega.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-interface_omega.obj `if test -f 'interface_omega.c'; then $(CYGPATH_W) 'interface_omega.c'; else $(CYGPATH_W) '$(srcdir)/interface_omega.c'; fi`

solv-operational_time.o: operational_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-operational_time.o -MD -MP -MF $(DEPDIR)/solv-operational_time.Tpo -c -o solv-operational_time.o `test -f 'operational_time.c' || echo '$(srcdir)/'`operational_time.c
	$(am__mv) $(DEPDIR)/solv-operational_time.Tpo $(DEPDIR)/solv-operational_time.Po
#	source='operational_time.c' object='solv-operational_time.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-operational_time.o `test -f 'operational_time.c' || echo '$(srcdir)/'`operational_time.c

solv-operational_time.obj: operational_time.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-operational_time.obj -MD -MP -MF $(DEPDIR)/solv-operational_time.Tpo -c -o solv-operational_time.obj `if test -f 'operational_time.c'; then $(CYGPATH_W) 'operational_time.c'; else $(CYGPATH_W) '$(srcdir)/operational_time.c'; fi`
	$(am__mv) $(DEPDIR)/solv-operational_time.Tpo $(DEPDIR)/solv-operational_time.Po
#	source='operational_time.c' object='solv-operational_time.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-operational_time.obj `if test -f 'operational_time.c'; then $(CYGPATH_W) 'operational_time.c'; else $(CYGPATH_W) '$(srcdir)/operational_time.c'; fi`

solv-det_event.o: det_event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-det_event.o -MD -MP -MF $(DEPDIR)/solv-det_event.Tpo -c -o solv-det_event.o `test -f 'det_event.c' || echo '$(srcdir)/'`det_event.c
	$(am__mv) $(DEPDIR)/solv-det_event.Tpo $(DEPDIR)/solv-det_event.Po
#	source='det_event.c' object='solv-det_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-det_event.o `test -f 'det_event.c' || echo '$(srcdir)/'`det_event.c

solv-det_event.obj: det_event.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-det_event.obj -MD -MP -MF $(DEPDIR)/solv-det_event.Tpo -c -o solv-det_event.obj `if test -f 'det_event.c'; then $(CYGPATH_W) 'det_event.c'; else $(CYGPATH_W) '$(srcdir)/det_event.c'; fi`
	$(am__mv) $(DEPDIR)/solv-det_event.Tpo $(DEPDIR)/solv-det_event.Po
#	source='det_event.c' object='solv-det_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-det_event.obj `if test -f 'det_event.c'; then $(CYGPATH_W) 'det_event.c'; else $(CYGPATH_W) '$(srcdir)/det_event.c'; fi`

solv-expected_trans_reward.o: expected_trans_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-expected_trans_reward.o -MD -MP -MF $(DEPDIR)/solv-expected_trans_reward.Tpo -c -o solv-expected_trans_reward.o `test -f 'expected_trans_reward.c' || echo '$(srcdir)/'`expected_trans_reward.c
	$(am__mv) $(DEPDIR)/solv-expected_trans_reward.Tpo $(DEPDIR)/solv-expected_trans_reward.Po
#	source='expected_trans_reward.c' object='solv-expected_trans_reward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-expected_trans_reward.o `test -f 'expected_trans_reward.c' || echo '$(srcdir)/'`expected_trans_reward.c

solv-expected_trans_reward.obj: expected_trans_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-expected_trans_reward.obj -MD -MP -MF $(DEPDIR)/solv-expected_trans_reward.Tpo -c -o solv-expected_trans_reward.obj `if test -f 'expected_trans_reward.c'; then $(CYGPATH_W) 'expected_trans_reward.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_reward.c'; fi`
	$(am__mv) $(DEPDIR)/solv-expected_trans_reward.Tpo $(DEPDIR)/solv-expected_trans_reward.Po
#	source='expected_trans_reward.c' object='solv-expected_trans_reward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-expected_trans_reward.obj `if test -f 'expected_trans_reward.c'; then $(CYGPATH_W) 'expected_trans_reward.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_reward.c'; fi`

solv-expected_trans_imp_rew.o: expected_trans_imp_rew.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-expected_trans_imp_rew.o -MD -MP -MF $(DEPDIR)/solv-expected_trans_imp_rew.Tpo -c -o solv-expected_trans_imp_rew.o `test -f 'expected_trans_imp_rew.c' || echo '$(srcdir)/'`expected_trans_imp_rew.c
	$(am__mv) $(DEPDIR)/solv-expected_trans_imp_rew.Tpo $(DEPDIR)/solv-expected_trans_imp_rew.Po
#	source='expected_trans_imp_rew.c' object='solv-expected_trans_imp_rew.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-expected_trans_imp_rew.o `test -f 'expected_trans_imp_rew.c' || echo '$(srcdir)/'`expected_trans_imp_rew.c

solv-expected_trans_imp_rew.obj: expected_trans_imp_rew.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-expected_trans_imp_rew.obj -MD -MP -MF $(DEPDIR)/solv-expected_trans_imp_rew.Tpo -c -o solv-expected_trans_imp_rew.obj `if test -f 'expected_trans_imp_rew.c'; then $(CYGPATH_W) 'expected_trans_imp_rew.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_imp_rew.c'; fi`
	$(am__mv) $(DEPDIR)/solv-expected_trans_imp_rew.Tpo $(DEPDIR)/solv-expected_trans_imp_rew.Po
#	source='expected_trans_imp_rew.c' object='solv-expected_trans_imp_rew.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-expected_trans_imp_rew.obj `if test -f 'expected_trans_imp_rew.c'; then $(CYGPATH_W) 'expected_trans_imp_rew.c'; else $(CYGPATH_W) '$(srcdir)/expected_trans_imp_rew.c'; fi`

solv-ImpMatrix.o: ImpMatrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-ImpMatrix.o -MD -MP -MF $(DEPDIR)/solv-ImpMatrix.Tpo -c -o solv-ImpMatrix.o `test -f 'ImpMatrix.c' || echo '$(srcdir)/'`ImpMatrix.c
	$(am__mv) $(DEPDIR)/solv-ImpMatrix.Tpo $(DEPDIR)/solv-ImpMatrix.Po
#	source='ImpMatrix.c' object='solv-ImpMatrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-ImpMatrix.o `test -f 'ImpMatrix.c' || echo '$(srcdir)/'`ImpMatrix.c

solv-ImpMatrix.obj: ImpMatrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-ImpMatrix.obj -MD -MP -MF $(DEPDIR)/solv-ImpMatrix.Tpo -c -o solv-ImpMatrix.obj `if test -f 'ImpMatrix.c'; then $(CYGPATH_W) 'ImpMatrix.c'; else $(CYGPATH_W) '$(srcdir)/ImpMatrix.c'; fi`
	$(am__mv) $(DEPDIR)/solv-ImpMatrix.Tpo $(DEPDIR)/solv-ImpMatrix.Po
#	source='ImpMatrix.c' object='solv-ImpMatrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-ImpMatrix.obj `if test -f 'ImpMatrix.c'; then $(CYGPATH_W) 'ImpMatrix.c'; else $(CYGPATH_W) '$(srcdir)/ImpMatrix.c'; fi`

solv-rate_cumulative_approximation.o: rate_cumulative_approximation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-rate_cumulative_approximation.o -MD -MP -MF $(DEPDIR)/solv-rate_cumulative_approximation.Tpo -c -o solv-rate_cumulative_approximation.o `test -f 'rate_cumulative_approximation.c' || echo '$(srcdir)/'`rate_cumulative_approximation.c
	$(am__mv) $(DEPDIR)/solv-rate_cumulative_approximation.Tpo $(DEPDIR)/solv-rate_cumulative_approximation.Po
#	source='rate_cumulative_approximation.c' object='solv-rate_cumulative_approximation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-rate_cumulative_approximation.o `test -f 'rate_cumulative_approximation.c' || echo '$(srcdir)/'`rate_cumulative_approximation.c

solv-rate_cumulative_approximation.obj: rate_cumulative_approximation.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-rate_cumulative_approximation.obj -MD -MP -MF $(DEPDIR)/solv-rate_cumulative_approximation.Tpo -c -o solv-rate_cumulative_approximation.obj `if test -f 'rate_cumulative_approximation.c'; then $(CYGPATH_W) 'rate_cumulative_approximation.c'; else $(CYGPATH_W) '$(srcdir)/rate_cumulative_approximation.c'; fi`
	$(am__mv) $(DEPDIR)/solv-rate_cumulative_approximation.Tpo $(DEPDIR)/solv-rate_cumulative_approximation.Po
#	source='rate_cumulative_approximation.c' object='solv-rate_cumulative_approximation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-rate_cumulative_approximation.obj `if test -f 'rate_cumulative_approximation.c'; then $(CYGPATH_W) 'rate_cumulative_approximation.c'; else $(CYGPATH_W) '$(srcdir)/rate_cumulative_approximation.c'; fi`

solv-cumulative_reward_iterative.o: cumulative_reward_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-cumulative_reward_iterative.o -MD -MP -MF $(DEPDIR)/solv-cumulative_reward_iterative.Tpo -c -o solv-cumulative_reward_iterative.o `test -f 'cumulative_reward_iterative.c' || echo '$(srcdir)/'`cumulative_reward_iterative.c
	$(am__mv) $(DEPDIR)/solv-cumulative_reward_iterative.Tpo $(DEPDIR)/solv-cumulative_reward_iterative.Po
#	source='cumulative_reward_iterative.c' object='solv-cumulative_reward_iterative.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-cumulative_reward_iterative.o `test -f 'cumulative_reward_iterative.c' || echo '$(srcdir)/'`cumulative_reward_iterative.c

solv-cumulative_reward_iterative.obj: cumulative_reward_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-cumulative_reward_iterative.obj -MD -MP -MF $(DEPDIR)/solv-cumulative_reward_iterative.Tpo -c -o solv-cumulative_reward_iterative.obj `if test -f 'cumulative_reward_iterative.c'; then $(CYGPATH_W) 'cumulative_reward_iterative.c'; else $(CYGPATH_W) '$(srcdir)/cumulative_reward_iterative.c'; fi`
	$(am__mv) $(DEPDIR)/solv-cumulative_reward_iterative.Tpo $(DEPDIR)/solv-cumulative_reward_iterative.Po
#	source='cumulative_reward_iterative.c' object='solv-cumulative_reward_iterative.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-cumulative_reward_iterative.obj `if test -f 'cumulative_reward_iterative.c'; then $(CYGPATH_W) 'cumulative_reward_iterative.c'; else $(CYGPATH_W) '$(srcdir)/cumulative_reward_iterative.c'; fi`

solv-sor-flex.o: sor-flex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-sor-flex.o -MD -MP -MF $(DEPDIR)/solv-sor-flex.Tpo -c -o solv-sor-flex.o `test -f 'sor-flex.c' || echo '$(srcdir)/'`sor-flex.c
	$(am__mv) $(DEPDIR)/solv-sor-flex.Tpo $(DEPDIR)/solv-sor-flex.Po
#	source='sor-flex.c' object='solv-sor-flex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-sor-flex.o `test -f 'sor-flex.c' || echo '$(srcdir)/'`sor-flex.c

solv-sor-flex.obj: sor-flex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-sor-flex.obj -MD -MP -MF $(DEPDIR)/solv-sor-flex.Tpo -c -o solv-sor-flex.obj `if test -f 'sor-flex.c'; then $(CYGPATH_W) 'sor-flex.c'; else $(CYGPATH_W) '$(srcdir)/sor-flex.c'; fi`
	$(am__mv) $(DEPDIR)/solv-sor-flex.Tpo $(DEPDIR)/solv-sor-flex.Po
#	source='sor-flex.c' object='solv-sor-flex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-sor-flex.obj `if test -f 'sor-flex.c'; then $(CYGPATH_W) 'sor-flex.c'; else $(CYGPATH_W) '$(srcdir)/sor-flex.c'; fi`

solv-iterative_methods_reward.o: iterative_methods_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-iterative_methods_reward.o -MD -MP -MF $(DEPDIR)/solv-iterative_methods_reward.Tpo -c -o solv-iterative_methods_reward.o `test -f 'iterative_methods_reward.c' || echo '$(srcdir)/'`iterative_methods_reward.c
	$(am__mv) $(DEPDIR)/solv-iterative_methods_reward.Tpo $(DEPDIR)/solv-iterative_methods_reward.Po
#	source='iterative_methods_reward.c' object='solv-iterative_methods_reward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-iterative_methods_reward.o `test -f 'iterative_methods_reward.c' || echo '$(srcdir)/'`iterative_methods_reward.c

solv-iterative_methods_reward.obj: iterative_methods_reward.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-iterative_methods_reward.obj -MD -MP -MF $(DEPDIR)/solv-iterative_methods_reward.Tpo -c -o solv-iterative_methods_reward.obj `if test -f 'iterative_methods_reward.c'; then $(CYGPATH_W) 'iterative_methods_reward.c'; else $(CYGPATH_W) '$(srcdir)/iterative_methods_reward.c'; fi`
	$(am__mv) $(DEPDIR)/solv-iterative_methods_reward.Tpo $(DEPDIR)/solv-iterative_methods_reward.Po
#	source='iterative_methods_reward.c' object='solv-iterative_methods_reward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-iterative_methods_reward.obj `if test -f 'iterative_methods_reward.c'; then $(CYGPATH_W) 'iterative_methods_reward.c'; else $(CYGPATH_W) '$(srcdir)/iterative_methods_reward.c'; fi`

solv-functions_espa.o: functions_espa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-functions_espa.o -MD -MP -MF $(DEPDIR)/solv-functions_espa.Tpo -c -o solv-functions_espa.o `test -f 'functions_espa.c' || echo '$(srcdir)/'`functions_espa.c
	$(am__mv) $(DEPDIR)/solv-functions_espa.Tpo $(DEPDIR)/solv-functions_espa.Po
#	source='functions_espa.c' object='solv-functions_espa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-functions_espa.o `test -f 'functions_espa.c' || echo '$(srcdir)/'`functions_espa.c

solv-functions_espa.obj: functions_espa.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-functions_espa.obj -MD -MP -MF $(DEPDIR)/solv-functions_espa.Tpo -c -o solv-functions_espa.obj `if test -f 'functions_espa.c'; then $(CYGPATH_W) 'functions_espa.c'; else $(CYGPATH_W) '$(srcdir)/functions_espa.c'; fi`
	$(am__mv) $(DEPDIR)/solv-functions_espa.Tpo $(DEPDIR)/solv-functions_espa.Po
#	source='functions_espa.c' object='solv-functions_espa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-functions_espa.obj `if test -f 'functions_espa.c'; then $(CYGPATH_W) 'functions_espa.c'; else $(CYGPATH_W) '$(srcdir)/functions_espa.c'; fi`

solv-espa_direct.o: espa_direct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-espa_direct.o -MD -MP -MF $(DEPDIR)/solv-espa_direct.Tpo -c -o solv-espa_direct.o `test -f 'espa_direct.c' || echo '$(srcdir)/'`espa_direct.c
	$(am__mv) $(DEPDIR)/solv-espa_direct.Tpo $(DEPDIR)/solv-espa_direct.Po
#	source='espa_direct.c' object='solv-espa_direct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-espa_direct.o `test -f 'espa_direct.c' || echo '$(srcdir)/'`espa_direct.c

solv-espa_direct.obj: espa_direct.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-espa_direct.obj -MD -MP -MF $(DEPDIR)/solv-espa_direct.Tpo -c -o solv-espa_direct.obj `if test -f 'espa_direct.c'; then $(CYGPATH_W) 'espa_direct.c'; else $(CYGPATH_W) '$(srcdir)/espa_direct.c'; fi`
	$(am__mv) $(DEPDIR)/solv-espa_direct.Tpo $(DEPDIR)/solv-espa_direct.Po
#	source='espa_direct.c' object='solv-espa_direct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-espa_direct.obj `if test -f 'espa_direct.c'; then $(CYGPATH_W) 'espa_direct.c'; else $(CYGPATH_W) '$(srcdir)/espa_direct.c'; fi`

solv-espa_iterative.o: espa_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-espa_iterative.o -MD -MP -MF $(DEPDIR)/solv-espa_iterative.Tpo -c -o solv-espa_iterative.o `test -f 'espa_iterative.c' || echo '$(srcdir)/'`espa_iterative.c
	$(am__mv) $(DEPDIR)/solv-espa_iterative.Tpo $(DEPDIR)/solv-espa_iterative.Po
#	source='espa_iterative.c' object='solv-espa_iterative.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-espa_iterative.o `test -f 'espa_iterative.c' || echo '$(srcdir)/'`espa_iterative.c

solv-espa_iterative.obj: espa_iterative.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT solv-espa_iterative.obj -MD -MP -MF $(DEPDIR)/solv-espa_iterative.Tpo -c -o solv-espa_iterative.obj `if test -f 'espa_iterative.c'; then $(CYGPATH_W) 'espa_iterative.c'; else $(CYGPATH_W) '$(srcdir)/espa_iterative.c'; fi`
	$(am__mv) $(DEPDIR)/solv-espa_iterative.Tpo $(DEPDIR)/solv-espa_iterative.Po
#	source='espa_iterative.c' object='solv-espa_iterative.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(solv_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o solv-espa_iterative.obj `if test -f 'espa_iterative.c'; then $(CYGPATH_W) 'espa_iterative.c'; else $(CYGPATH_W) '$(srcdir)/espa_iterative.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstLIBRARIES ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
