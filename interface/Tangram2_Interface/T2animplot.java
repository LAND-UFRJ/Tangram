/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;
/*
 * T2animplot.java
 *
 * Created on September 10, 2002, 3:55 PM
 */

import javax.swing.JTable;
import java.util.StringTokenizer;
import java.util.Vector;
public class T2animplot extends javax.swing.JFrame {

    /** Creates new form T2animplot */
    public T2animplot( T2simulation_reward mainholder, T2reward_data rew_data )
    {
        simulation_reward = mainholder;
        reward_data = rew_data;
        initComponents();
        initComponentsManual();
        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jP_Reward2 = new javax.swing.JPanel();
        jP_Options = new javax.swing.JPanel();
        jL_Model_Rewards = new javax.swing.JLabel();
        jP_Reward21 = new javax.swing.JPanel();
        jSP_Table_Rewards = new javax.swing.JScrollPane();
        jL_Ranges_Grid_Options = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTF_X_Range_Length = new javax.swing.JTextField();
        jTF_Grid_Spacing = new javax.swing.JTextField();
        jL_Grid_Spacing = new javax.swing.JLabel();
        jL_Max_Y_Range = new javax.swing.JLabel();
        jL_Min_Y_Range = new javax.swing.JLabel();
        jL_X_Range_Length = new javax.swing.JLabel();
        jTF_Max_Y_Range = new javax.swing.JTextField();
        jTF_Min_Y_Range = new javax.swing.JTextField();
        jL_Other_Options = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jL_Animplot_Samples_Buffer_Size = new javax.swing.JLabel();
        jTF_Samples_Buffer_Size = new javax.swing.JTextField();
        jL_Animplot_Polling_Interval = new javax.swing.JLabel();
        jTF_Polling_Interval = new javax.swing.JTextField();
        jB_ok = new javax.swing.JButton();
        jB_cancel = new javax.swing.JButton();

        setTitle("Tangram II [Animplot Options]");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jP_Reward2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Reward2.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jP_Reward2.setPreferredSize(new java.awt.Dimension(600, 385));
        jP_Options.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Options.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_Model_Rewards.setText("Model Rewards");
        jL_Model_Rewards.setToolTipText("");
        jL_Model_Rewards.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Model_Rewards, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        jP_Reward21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Reward21.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jP_Reward21.setToolTipText("Select the rewards that you would like to have plotted by animplot during simulation.");
        jP_Reward21.add(jSP_Table_Rewards, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 410, 140));

        jP_Options.add(jP_Reward21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 430, 160));

        jL_Ranges_Grid_Options.setText("Ranges and Grid Options");
        jL_Ranges_Grid_Options.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Ranges_Grid_Options, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, 20));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jPanel1.add(jTF_X_Range_Length, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 60, 20));

        jPanel1.add(jTF_Grid_Spacing, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 35, 60, 20));

        jL_Grid_Spacing.setText("Grid Spacing");
        jL_Grid_Spacing.setForeground(java.awt.Color.black);
        jL_Grid_Spacing.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Grid_Spacing, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 35, -1, 20));

        jL_Max_Y_Range.setText("Maximum Y Range");
        jL_Max_Y_Range.setForeground(java.awt.Color.black);
        jL_Max_Y_Range.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Max_Y_Range, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        jL_Min_Y_Range.setText("Minimum Y Range");
        jL_Min_Y_Range.setForeground(java.awt.Color.black);
        jL_Min_Y_Range.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Min_Y_Range, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 35, -1, 20));

        jL_X_Range_Length.setText("X Range Length");
        jL_X_Range_Length.setForeground(java.awt.Color.black);
        jL_X_Range_Length.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_X_Range_Length, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, 20));

        jPanel1.add(jTF_Max_Y_Range, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 60, 20));

        jPanel1.add(jTF_Min_Y_Range, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 35, 60, 20));

        jP_Options.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 430, 60));

        jL_Other_Options.setText("Other Options");
        jL_Other_Options.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Other_Options, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 285, 130, 20));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_Animplot_Samples_Buffer_Size.setText("Samples Buffer Size");
        jL_Animplot_Samples_Buffer_Size.setForeground(java.awt.Color.black);
        jL_Animplot_Samples_Buffer_Size.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel3.add(jL_Animplot_Samples_Buffer_Size, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 10, -1, 20));

        jPanel3.add(jTF_Samples_Buffer_Size, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 60, 20));

        jL_Animplot_Polling_Interval.setText("Polling Interval (usec)");
        jL_Animplot_Polling_Interval.setForeground(java.awt.Color.black);
        jL_Animplot_Polling_Interval.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel3.add(jL_Animplot_Polling_Interval, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, 20));

        jPanel3.add(jTF_Polling_Interval, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 60, 20));

        jP_Options.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 305, 430, 40));

        jP_Reward2.add(jP_Options, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 450, 355));

        jB_ok.setToolTipText("Save configuration");
        jB_ok.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_ok.setText("OK");
        jB_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_okActionPerformed(evt);
            }
        });

        jP_Reward2.add(jB_ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 10, 110, 30));

        jB_cancel.setToolTipText("Cancel configuration");
        jB_cancel.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_cancel.setText("Cancel");
        jB_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_cancelActionPerformed(evt);
            }
        });

        jP_Reward2.add(jB_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 110, 30));

        getContentPane().add(jP_Reward2, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void jB_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_cancelActionPerformed
        simulation_reward.setEnabled(true);
        dispose();   
    }//GEN-LAST:event_jB_cancelActionPerformed

    private void jB_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_okActionPerformed
         String value;

         for( int i = 0; i < reward_data.reward_plot_set.length; i++ )
         {
             reward_data.reward_plot_set[i] = ((Boolean)jT_Rewards.getValueAt(i,0)).booleanValue();
         }
         value = jTF_Max_Y_Range.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.maximum_y_range = value;
         }
         value = jTF_Min_Y_Range.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.minimum_y_range = value;
         }
         value = jTF_X_Range_Length.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.x_range = value;
         }
         value = jTF_Grid_Spacing.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.grid_spacing = value;
         }
         value = jTF_Samples_Buffer_Size.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.samples_buffer_size = value;
         }
         value = jTF_Polling_Interval.getText();
         if ( value.length() > 0 )
         {
             if( T2functions.Is_valid_parameter(value,1)!=0 ) 
             {
                 javax.swing.JOptionPane.showMessageDialog(this, "Invalid argument: " + value,"Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
             }
             reward_data.polling_interval = value;
         }

         simulation_reward.setEnabled(true);
         dispose();   
    }//GEN-LAST:event_jB_okActionPerformed

    /** Exit this Form */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        simulation_reward.setEnabled(true);
        dispose();             
    }//GEN-LAST:event_exitForm

     //*********************************** initComponents Manual *********************************************
    public void initComponentsManual() {
        int lines_in_table;
        String line, line2;

        /*Getting the number of rows */
        lines_in_table = reward_data.reward_name.length;

        Object[][] tableContents = new Object[lines_in_table][2];

        //Exhibiting rewards in the table

        for ( int i=0; i<lines_in_table; i++  )
        {
            tableContents[i][1] = reward_data.reward_name[i];
            tableContents[i][0] = new Boolean(reward_data.reward_plot_set[i]);
        }

        //Creating the table dinamically
        jT_Rewards = new javax.swing.JTable( lines_in_table, 2 );
        jT_Rewards.setModel( 
        new javax.swing.table.DefaultTableModel(
              tableContents,
              new String [] {"Plot", "Variable Names"}
           )

           {
              Class[] types = new Class [] 
              {
                 java.lang.Boolean.class, java.lang.String.class
              };
              boolean[] canEdit = new boolean [] {
                 true, false
              };

              public Class getColumnClass(int columnIndex) {
                 return types [columnIndex];
              }


              public boolean isCellEditable(int rowIndex, int columnIndex) {
                 return canEdit [columnIndex];
              }
           }
        );
/*
        jT_Rewards.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jT_RewardsFocusLost(evt);
            }
        });              */

//        jT_Rewards.setEnabled(true);

        jSP_Table_Rewards.setViewportView(jT_Rewards);
        
        // Filling the Text Fields with its parameters.
        jTF_Grid_Spacing.setText(reward_data.grid_spacing);
        jTF_Max_Y_Range.setText(reward_data.maximum_y_range);
        jTF_Min_Y_Range.setText(reward_data.minimum_y_range);
        jTF_Polling_Interval.setText(reward_data.polling_interval);
        jTF_Samples_Buffer_Size.setText(reward_data.samples_buffer_size);
        jTF_X_Range_Length.setText(reward_data.x_range);
 }
    
 private void jT_RewardsFocusLost(java.awt.event.FocusEvent evt) {
        
    jT_Rewards.editingStopped(null);
    
 }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jL_X_Range_Length;
    private javax.swing.JPanel jP_Reward2;
    private javax.swing.JTextField jTF_Max_Y_Range;
    private javax.swing.JLabel jL_Min_Y_Range;
    private javax.swing.JLabel jL_Other_Options;
    private javax.swing.JLabel jL_Max_Y_Range;
    private javax.swing.JScrollPane jSP_Table_Rewards;
    private javax.swing.JTextField jTF_X_Range_Length;
    private javax.swing.JLabel jL_Animplot_Samples_Buffer_Size;
    private javax.swing.JLabel jL_Model_Rewards;
    private javax.swing.JButton jB_ok;
    private javax.swing.JLabel jL_Ranges_Grid_Options;
    private javax.swing.JPanel jP_Options;
    private javax.swing.JLabel jL_Animplot_Polling_Interval;
    private javax.swing.JTextField jTF_Polling_Interval;
    private javax.swing.JTextField jTF_Grid_Spacing;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jB_cancel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jP_Reward21;
    private javax.swing.JTextField jTF_Samples_Buffer_Size;
    private javax.swing.JLabel jL_Grid_Spacing;
    private javax.swing.JTextField jTF_Min_Y_Range;
    // End of variables declaration//GEN-END:variables

    private T2reward_data reward_data;
    public T2simulation_reward simulation_reward;
    public JTable jT_Rewards;
}
