/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2Analytical_Transient_Probability_and_Intervals extends javax.swing.JPanel {


  /** Initializes the Form */
  public T2Analytical_Transient_Probability_and_Intervals() {
    this(0);
  }


   /* Constructor:

      public T2Analytical_Transient_Probability_and_Intervals(int b)

      parameters :

      b - indicates layout

      0 - shows all the fields, except Erlang Stages
      1 - shows all the fields, except Precision
      2 - shows all the fields, except Precision; initial time is equal to ZERO
    */


  public T2Analytical_Transient_Probability_and_Intervals(int b) {
    initComponents ();
    layout = b;
    initComponentsManual ();
  }


  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jL_Precision = new javax.swing.JLabel();
        jL_Initial_State = new javax.swing.JLabel();
        jL_Final_State = new javax.swing.JLabel();
        jL_Probability = new javax.swing.JLabel();
        jL_Initial_Time = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jB_Initial_Probability = new javax.swing.JButton();
        jB_Time_Intervals = new javax.swing.JButton();
        jTF_Initial_Probability = new javax.swing.JTextField();
        jTF_Initial_State = new javax.swing.JTextField();
        jTF_Final_State = new javax.swing.JTextField();
        jTF_Initial_Time = new javax.swing.JTextField();
        jTF_Probability = new javax.swing.JTextField();
        jTF_Final_Time = new javax.swing.JTextField();
        jTF_Number_of_Points = new javax.swing.JTextField();
        jTF_Time_Intervals = new javax.swing.JTextField();
        jTF_Precision = new javax.swing.JTextField();
        jTB_Equiprobable = new javax.swing.JToggleButton();
        jTB_Initial_State = new javax.swing.JToggleButton();
        jTB_Equiprobable_Set = new javax.swing.JToggleButton();
        jL_Equiprobable = new javax.swing.JLabel();
        jL_IState = new javax.swing.JLabel();
        jL_Equiprobable_Set = new javax.swing.JLabel();
        jL_Erlang_Stages = new javax.swing.JLabel();
        jTF_Erlang_Stages = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Time Intervals");
        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 159, -1, -1));

        jLabel2.setText("Initial Probability");
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jL_Precision.setText("Precision");
        jL_Precision.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Precision, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 231, -1, -1));

        jL_Initial_State.setText("Initial State");
        jL_Initial_State.setForeground(java.awt.Color.black);
        jL_Initial_State.setFont(new java.awt.Font("Dialog", 1, 10));
        jL_Initial_State.setEnabled(false);
        jPanel1.add(jL_Initial_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 112, -1, -1));

        jL_Final_State.setText("Final State");
        jL_Final_State.setForeground(java.awt.Color.black);
        jL_Final_State.setFont(new java.awt.Font("Dialog", 1, 10));
        jL_Final_State.setEnabled(false);
        jPanel1.add(jL_Final_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 112, -1, -1));

        jL_Probability.setText("Probability");
        jL_Probability.setForeground(java.awt.Color.black);
        jL_Probability.setFont(new java.awt.Font("Dialog", 1, 10));
        jL_Probability.setEnabled(false);
        jPanel1.add(jL_Probability, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 112, -1, -1));

        jL_Initial_Time.setText("Initial Time");
        jL_Initial_Time.setForeground(java.awt.Color.black);
        jL_Initial_Time.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Initial_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 185, -1, -1));

        jLabel9.setText("Final Time");
        jLabel9.setForeground(java.awt.Color.black);
        jLabel9.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 185, -1, -1));

        jLabel10.setText("Num. Points");
        jLabel10.setForeground(java.awt.Color.black);
        jLabel10.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 185, -1, -1));

        jB_Initial_Probability.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_Initial_Probability.setText("Add");
        jB_Initial_Probability.setEnabled(false);
        jB_Initial_Probability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Initial_ProbabilityActionPerformed(evt);
            }
        });

        jPanel1.add(jB_Initial_Probability, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 108, 60, 20));

        jB_Time_Intervals.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_Time_Intervals.setText("Add");
        jB_Time_Intervals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Time_IntervalsActionPerformed(evt);
            }
        });

        jPanel1.add(jB_Time_Intervals, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 180, 60, 20));

        jTF_Initial_Probability.setEnabled(false);
        jPanel1.add(jTF_Initial_Probability, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 82, 330, 20));

        jTF_Initial_State.setEnabled(false);
        jPanel1.add(jTF_Initial_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 108, 48, 20));

        jTF_Final_State.setEnabled(false);
        jPanel1.add(jTF_Final_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 108, 48, 20));

        jTF_Initial_Time.setToolTipText("Initial Time must be zero (first interval) and there must be no gaps between intervals");
        jPanel1.add(jTF_Initial_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 180, 48, 20));

        jTF_Probability.setEnabled(false);
        jPanel1.add(jTF_Probability, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 108, 48, 20));

        jPanel1.add(jTF_Final_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 48, 20));

        jPanel1.add(jTF_Number_of_Points, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 180, 48, 20));

        jTF_Time_Intervals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTF_Time_IntervalsActionPerformed(evt);
            }
        });

        jPanel1.add(jTF_Time_Intervals, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 155, 380, 20));

        jPanel1.add(jTF_Precision, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 227, 173, 20));

        jTB_Equiprobable.setSelected(true);
        jPanel1.add(jTB_Equiprobable, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 35, 15, 15));

        jPanel1.add(jTB_Initial_State, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 60, 15, 15));

        jTB_Equiprobable_Set.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTB_EquiprobableSetStateChanged(evt);
            }
        });

        jPanel1.add(jTB_Equiprobable_Set, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 85, 15, 15));

        jL_Equiprobable.setText("Equiprobable");
        jL_Equiprobable.setForeground(java.awt.Color.black);
        jL_Equiprobable.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Equiprobable, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 35, -1, 17));

        jL_IState.setText("Initial State");
        jL_IState.setForeground(java.awt.Color.black);
        jL_IState.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_IState, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 60, -1, 17));

        jL_Equiprobable_Set.setText("Equiprobable Set");
        jL_Equiprobable_Set.setForeground(java.awt.Color.black);
        jL_Equiprobable_Set.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Equiprobable_Set, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 85, -1, 17));

        jL_Erlang_Stages.setText("Erlang Stages");
        jL_Erlang_Stages.setForeground(java.awt.Color.black);
        jL_Erlang_Stages.setFont(new java.awt.Font("Dialog", 1, 10));
        jPanel1.add(jL_Erlang_Stages, new org.netbeans.lib.awtextra.AbsoluteConstraints(156, 210, -1, -1));

        jPanel1.add(jTF_Erlang_Stages, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 205, 48, 20));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 518, 255));

    }//GEN-END:initComponents

  private void jTF_Time_IntervalsActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTF_Time_IntervalsActionPerformed
    // Add your handling code here:
  }//GEN-LAST:event_jTF_Time_IntervalsActionPerformed


  private void initComponentsManual()
  {
    javax.swing.ButtonGroup group = new javax.swing.ButtonGroup();
    group.add(jTB_Equiprobable);
    group.add(jTB_Initial_State);
    group.add(jTB_Equiprobable_Set);

    /* if alternative layout show erlang stages and hide precision */

    /*
      layout
      0 - shows all the fields, except Erlang Stages
      1 - shows all the fields, except Precision
      2 - shows all the fields, except Precision; initial time is equal to ZERO
    */
    jTF_Precision.setVisible(layout==0);
    jL_Precision.setVisible(layout==0);
    jTF_Erlang_Stages.setVisible(layout!=0);
    jL_Erlang_Stages.setVisible(layout!=0);

    /* jL_Initial_Time.setVisible(layout!=2);

       jTF_Initial_Time.setVisible(layout!=2); */

    if (layout==2)
    {
   /* jTF_Initial_Time.setHorizontalAlignment(jTF_Initial_Time.CENTER); */
      jTF_Initial_Time.setText("0");
      jTF_Initial_Time.setEnabled(false);
    }
    else
    {
      jTF_Initial_Time.setText("");
      jTF_Initial_Time.setEnabled(true);
    }

    jTF_Time_Intervals.setVisible(layout!=2);
    jB_Time_Intervals.setVisible(layout!=2);

  }

  private void jTB_EquiprobableSetStateChanged (javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTB_EquiprobableSetStateChanged
    boolean state = jTB_Equiprobable_Set.isSelected();

    jL_Initial_State.setEnabled(state);
    jL_Final_State.setEnabled(state);
    jL_Probability.setEnabled(state);
    jTF_Initial_State.setEnabled(state);
    jTF_Final_State.setEnabled(state);
    jTF_Probability.setEnabled(state);
    jB_Initial_Probability.setEnabled(state);
    jTF_Initial_Probability.setEnabled(state);
  }//GEN-LAST:event_jTB_EquiprobableSetStateChanged

  private void jB_Time_IntervalsActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Time_IntervalsActionPerformed
    String initial_time = jTF_Initial_Time.getText().trim(),
           final_time = jTF_Final_Time.getText().trim(),
           number_of_points = jTF_Number_of_Points.getText().trim(),
           erlang_stages = jTF_Erlang_Stages.getText().trim();

    switch (layout)
    {
      case 0:    //  layout 0

        if (initial_time.compareTo("") != 0) {

          if ((final_time.compareTo("") == 0) && (number_of_points.compareTo("") == 0)) {
            //only initial time was specified
            if (jTF_Time_Intervals.getText().compareTo("") == 0)
              jTF_Time_Intervals.setText(initial_time);
            else
              jTF_Time_Intervals.setText(jTF_Time_Intervals.getText() + "; " + initial_time);
          }
          else if ((final_time.compareTo("")!= 0) && (number_of_points.compareTo("")!= 0)) {
                 //all fields were specified
                if (jTF_Time_Intervals.getText().compareTo("") == 0)
                  jTF_Time_Intervals.setText("n "+ initial_time + " " + final_time + " " + number_of_points );
                else
                 jTF_Time_Intervals.setText(jTF_Time_Intervals.getText() + "; " + "n "+ initial_time + " " + final_time + " " + number_of_points );
               }
          else if (final_time.compareTo("") == 0) {
                 javax.swing.JOptionPane.showMessageDialog(this,"Final Time not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
               }
          else if (number_of_points.compareTo("") == 0) {
                 javax.swing.JOptionPane.showMessageDialog(this,"Number of Points not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                 return;
               }
        }
        else
        {
          javax.swing.JOptionPane.showMessageDialog(this,"Initial Time not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          return;
        }
        break;

      case 1: //using layout 1 - must fill all the text fields

        if (initial_time.compareTo("") != 0) {

            if(final_time.compareTo("") == 0)
            {
                   javax.swing.JOptionPane.showMessageDialog(this,"Final Time not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                   return;
            }
            else if(number_of_points.compareTo("") == 0)
            {
                   javax.swing.JOptionPane.showMessageDialog(this,"Number of Points not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                   return;
            }
            else if(erlang_stages.compareTo("") == 0)
            {
                   javax.swing.JOptionPane.showMessageDialog(this,"Erlang Stages not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                   return;
            }
            else
            {
              if (jTF_Time_Intervals.getText().compareTo("") == 0)
                jTF_Time_Intervals.setText("n "+ initial_time + " " + final_time + " " + number_of_points + " " + erlang_stages);
              else
               jTF_Time_Intervals.setText(jTF_Time_Intervals.getText() + "; " + "n "+ initial_time + " " + final_time + " " + number_of_points + " " + erlang_stages);
            }
        }
        else
        {
            javax.swing.JOptionPane.showMessageDialog(this,"Initial Time not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        break;

      case 2:

        if(final_time.compareTo("") == 0)
        {
               javax.swing.JOptionPane.showMessageDialog(this,"Final Time not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
               return;
        }
        else if(number_of_points.compareTo("") == 0)
        {
               javax.swing.JOptionPane.showMessageDialog(this,"Number of Points not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
               return;
        }
        else if(erlang_stages.compareTo("") == 0)
        {
               javax.swing.JOptionPane.showMessageDialog(this,"Erlang Stages not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
               return;
        }
        else
        {
          if (jTF_Time_Intervals.getText().compareTo("") == 0)
            jTF_Time_Intervals.setText("n " + final_time + " " + number_of_points + " " + erlang_stages);
          else
           jTF_Time_Intervals.setText(jTF_Time_Intervals.getText() + "; " + "n " + final_time + " " + number_of_points + " " + erlang_stages);
        }
        break;
    }

    jTF_Initial_Time.setText("");
    jTF_Final_Time.setText("");
    jTF_Number_of_Points.setText("");
    jTF_Erlang_Stages.setText("");

  }//GEN-LAST:event_jB_Time_IntervalsActionPerformed

  private void jB_Initial_ProbabilityActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Initial_ProbabilityActionPerformed
    String initial_state = jTF_Initial_State.getText().trim(),
           final_state = jTF_Final_State.getText().trim(),
           probability = jTF_Probability.getText().trim();

    //if the user did not specify the Initial State Field
    if (initial_state.compareTo("") == 0) {
      javax.swing.JOptionPane.showMessageDialog(this,"Initial State not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      return;
    }
    else {
      if (final_state.compareTo("") == 0) {
      //The user specified only Initial State and probability
        if (probability.compareTo("") == 0) {
          javax.swing.JOptionPane.showMessageDialog(this,"Probability not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          return;
        }
        else {//everything is ok
          if (jTF_Initial_Probability.getText().compareTo("") == 0)
            jTF_Initial_Probability.setText(initial_state + " " + probability);
          else
            jTF_Initial_Probability.setText(jTF_Initial_Probability.getText() + "; " + initial_state + " " + probability);
        }
      }
      else {
      //The user specified Initial, Final State and Probability
        if (probability.compareTo("") == 0) {
          javax.swing.JOptionPane.showMessageDialog(this,"Probability not specified!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          return;
        }
        else {//everything is ok
          if (jTF_Initial_Probability.getText().compareTo("") == 0)
            jTF_Initial_Probability.setText("e " + initial_state + " " + final_state + " " + probability);
          else
            jTF_Initial_Probability.setText(jTF_Initial_Probability.getText() + "; e " + initial_state + " " + final_state + " " + probability);
        }
      }
    }
    jTF_Initial_State.setText("");
    jTF_Final_State.setText("");
    jTF_Probability.setText("");
  }//GEN-LAST:event_jB_Initial_ProbabilityActionPerformed

  public String Get_Erlang_Stages()
  {
    return (jTF_Erlang_Stages.getText());
  }
  public String Get_Initial_Time()
  {
    return (jTF_Initial_Time.getText());
  }
  public String Get_Final_Time()
  {
    return (jTF_Final_Time.getText());
  }
  public String Get_Number_of_Points()
  {
    return (jTF_Number_of_Points.getText());
  }

  public String Get_Intervals()
  {
    return (jTF_Time_Intervals.getText());
  }

  public String Get_Precision()
  {
    return (jTF_Precision.getText());
  }


  public String Is_some_field_missing_and_get_precision( String basename )
  {
      return (Is_some_field_missing_and_get_precision(basename, true));
  }


  public String Is_some_field_missing_and_get_precision( String basename, boolean mustTestTimeIntervals )
  {
      String sInitial_Prob;
      java.util.Vector OptionalFields = new java.util.Vector();
      OptionalFields.add(jTF_Initial_State);
      OptionalFields.add(jTF_Final_State);
      OptionalFields.add(jTF_Probability);
      OptionalFields.add(jTF_Initial_Time);
      OptionalFields.add(jTF_Final_Time);
      OptionalFields.add(jTF_Number_of_Points);
      OptionalFields.add(jTF_Erlang_Stages);

      if (!jTF_Precision.isVisible())
            OptionalFields.add(jTF_Precision);

      if (!jTF_Time_Intervals.isVisible())
            OptionalFields.add(jTF_Time_Intervals);


      if (T2functions.Is_some_field_missing(jPanel1,OptionalFields))
        return "999";

      //Get and test Initial Probability
      if (jTB_Equiprobable.isSelected())
        sInitial_Prob = "e_All";
      else if (jTB_Initial_State.isSelected())
        sInitial_Prob = "1 1.0";
      else
        sInitial_Prob = jTF_Initial_Probability.getText();

      if (!T2functions.Is_Initial_Probability_valid(sInitial_Prob,basename,this))
        return "999";

      //Get and test Time Intervals
      if (mustTestTimeIntervals)
      {
        if (jTF_Time_Intervals.isVisible())
        {
          if (!T2functions.Is_Time_Intervals_valid(jTF_Time_Intervals.getText(), basename, this))
            return "999";
        }
      }
      if (jTF_Precision.isVisible())
        return jTF_Precision.getText();
      else
        return ("");
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTF_Erlang_Stages;
    private javax.swing.JLabel jL_Equiprobable;
    private javax.swing.JButton jB_Initial_Probability;
    private javax.swing.JLabel jL_Erlang_Stages;
    private javax.swing.JLabel jL_IState;
    private javax.swing.JTextField jTF_Precision;
    private javax.swing.JToggleButton jTB_Initial_State;
    private javax.swing.JLabel jL_Equiprobable_Set;
    private javax.swing.JTextField jTF_Initial_Time;
    private javax.swing.JTextField jTF_Time_Intervals;
    private javax.swing.JTextField jTF_Probability;
    private javax.swing.JTextField jTF_Initial_State;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jL_Probability;
    private javax.swing.JLabel jL_Initial_Time;
    private javax.swing.JLabel jL_Initial_State;
    private javax.swing.JButton jB_Time_Intervals;
    private javax.swing.JLabel jL_Precision;
    private javax.swing.JTextField jTF_Number_of_Points;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTF_Final_State;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton jTB_Equiprobable;
    private javax.swing.JToggleButton jTB_Equiprobable_Set;
    private javax.swing.JTextField jTF_Final_Time;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jL_Final_State;
    private javax.swing.JTextField jTF_Initial_Probability;
    private javax.swing.JLabel jLabel10;
    // End of variables declaration//GEN-END:variables
// More variables...
  private int layout;
}


