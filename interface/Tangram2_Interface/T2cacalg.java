/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2cacalg extends javax.swing.JPanel {

  /** Initializes the Form */
  public T2cacalg() {
    initComponents ();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
private void initComponents () {//GEN-BEGIN:initComponents
    jP_Network_Description = new javax.swing.JPanel ();
    jLabel1 = new javax.swing.JLabel ();
    jLabel2 = new javax.swing.JLabel ();
    jLabel3 = new javax.swing.JLabel ();
    jTF_Transmission_Capacity = new javax.swing.JTextField ();
    jTF_Buffer_Size = new javax.swing.JTextField ();
    jTF_QoS = new javax.swing.JTextField ();
    jLabel4 = new javax.swing.JLabel ();
    jLabel5 = new javax.swing.JLabel ();
    jTP_Algorithms = new javax.swing.JTabbedPane ();
    jP_Regulated = new javax.swing.JPanel ();
    jPanel7 = new javax.swing.JPanel ();
    jLabel6 = new javax.swing.JLabel ();
    jLabel7 = new javax.swing.JLabel ();
    jLabel8 = new javax.swing.JLabel ();
    jTF_Reg_Source_Peak_Rate = new javax.swing.JTextField ();
    jTF_Reg_Source_Average_Rate = new javax.swing.JTextField ();
    jTF_Reg_Maximum_Burst_Size = new javax.swing.JTextField ();
    jLabel9 = new javax.swing.JLabel ();
    jLabel10 = new javax.swing.JLabel ();
    jLabel11 = new javax.swing.JLabel ();
    jP_NonRegulated = new javax.swing.JPanel ();
    jPanel10 = new javax.swing.JPanel ();
    jLabel12 = new javax.swing.JLabel ();
    jLabel13 = new javax.swing.JLabel ();
    jLabel14 = new javax.swing.JLabel ();
    jTF_NonReg_Source_Peak_Rate = new javax.swing.JTextField ();
    jTF_NonReg_On_Off_Rate = new javax.swing.JTextField ();
    jTF_NonReg_Off_On_Rate = new javax.swing.JTextField ();
    jLabel16 = new javax.swing.JLabel ();
    jLabel15 = new javax.swing.JLabel ();
    jTF_Output_File = new javax.swing.JTextField ();
    setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());

    jP_Network_Description.setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());
    jP_Network_Description.setBorder (new javax.swing.border.TitledBorder(
    new javax.swing.border.EtchedBorder(), " Network Description ", 1, 2,
    new java.awt.Font ("Dialog", 1, 10)));

      jLabel1.setText ("Buffer Size");
      jLabel1.setFont (new java.awt.Font ("Dialog", 1, 10));
  
      jP_Network_Description.add (jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 50, -1, 20));
  
      jLabel2.setText ("Transmission Capacity");
      jLabel2.setFont (new java.awt.Font ("Dialog", 1, 10));
  
      jP_Network_Description.add (jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 20, -1, 20));
  
      jLabel3.setText ("QoS (loss probability)");
      jLabel3.setFont (new java.awt.Font ("Dialog", 1, 10));
  
      jP_Network_Description.add (jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 80, -1, 20));
  
  
      jP_Network_Description.add (jTF_Transmission_Capacity, new org.netbeans.lib.awtextra.AbsoluteConstraints (175, 20, 100, 20));
  
  
      jP_Network_Description.add (jTF_Buffer_Size, new org.netbeans.lib.awtextra.AbsoluteConstraints (175, 50, 100, 20));
  
  
      jP_Network_Description.add (jTF_QoS, new org.netbeans.lib.awtextra.AbsoluteConstraints (175, 80, 100, 20));
  
      jLabel4.setText ("bytes/s");
      jLabel4.setFont (new java.awt.Font ("Dialog", 1, 10));
  
      jP_Network_Description.add (jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints (280, 20, -1, 20));
  
      jLabel5.setText ("bytes");
      jLabel5.setFont (new java.awt.Font ("Dialog", 1, 10));
  
      jP_Network_Description.add (jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints (280, 50, 50, 20));
  

    add (jP_Network_Description, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 10, 520, 130));

    jTP_Algorithms.setFont (new java.awt.Font ("Dialog", 1, 10));

      jP_Regulated.setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());
      jP_Regulated.setName ("");
  
        jPanel7.setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());
        jPanel7.setBorder (new javax.swing.border.LineBorder(java.awt.Color.gray));
    
          jLabel6.setText ("Source Peak Rate");
          jLabel6.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 10, -1, 20));
      
          jLabel7.setText ("Source Average Rate");
          jLabel7.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 45, -1, 20));
      
          jLabel8.setText ("Maximum Burst Size");
          jLabel8.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 80, -1, 20));
      
      
          jPanel7.add (jTF_Reg_Source_Peak_Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 10, 80, 20));
      
      
          jPanel7.add (jTF_Reg_Source_Average_Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 45, 80, 20));
      
      
          jPanel7.add (jTF_Reg_Maximum_Burst_Size, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 80, 80, 20));
      
          jLabel9.setText ("bytes/s");
          jLabel9.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints (260, 10, -1, 20));
      
          jLabel10.setText ("bytes/s");
          jLabel10.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints (260, 45, -1, 20));
      
          jLabel11.setText ("bytes");
          jLabel11.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel7.add (jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints (260, 80, -1, 20));
      
        jP_Regulated.add (jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 10, 480, 110));
    
      jTP_Algorithms.addTab ("Regulated Traffic Algorithm", jP_Regulated);
  
      jP_NonRegulated.setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());
  
        jPanel10.setLayout (new org.netbeans.lib.awtextra.AbsoluteLayout ());
        jPanel10.setBorder (new javax.swing.border.LineBorder(java.awt.Color.gray));
    
          jLabel12.setText ("Source Peak Rate");
          jLabel12.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel10.add (jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 10, -1, 20));
      
          jLabel13.setText ("On-Off Rate");
          jLabel13.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel10.add (jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 45, -1, 20));
      
          jLabel14.setText ("Off-On Rate");
          jLabel14.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel10.add (jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 80, -1, 20));
      
      
          jPanel10.add (jTF_NonReg_Source_Peak_Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 10, 80, 20));
      
      
          jPanel10.add (jTF_NonReg_On_Off_Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 45, 80, 20));
      
      
          jPanel10.add (jTF_NonReg_Off_On_Rate, new org.netbeans.lib.awtextra.AbsoluteConstraints (160, 80, 80, 20));
      
          jLabel16.setText ("bytes/s");
          jLabel16.setFont (new java.awt.Font ("Dialog", 1, 10));
      
          jPanel10.add (jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints (260, 10, -1, 20));
      
        jP_NonRegulated.add (jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 10, 480, 110));
    
      jTP_Algorithms.addTab ("Non-Regulated Traffic Algorithm", jP_NonRegulated);
  

    add (jTP_Algorithms, new org.netbeans.lib.awtextra.AbsoluteConstraints (10, 150, 515, 160));

    jLabel15.setText ("Output File");
    jLabel15.setFont (new java.awt.Font ("Dialog", 1, 10));


    add (jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints (30, 320, -1, 20));



    add (jTF_Output_File, new org.netbeans.lib.awtextra.AbsoluteConstraints (180, 320, 200, 20));

}//GEN-END:initComponents


// Variables declaration - do not modify//GEN-BEGIN:variables
private javax.swing.JPanel jP_Network_Description;
private javax.swing.JLabel jLabel1;
private javax.swing.JLabel jLabel2;
private javax.swing.JLabel jLabel3;
private javax.swing.JTextField jTF_Transmission_Capacity;
private javax.swing.JTextField jTF_Buffer_Size;
private javax.swing.JTextField jTF_QoS;
private javax.swing.JLabel jLabel4;
private javax.swing.JLabel jLabel5;
private javax.swing.JTabbedPane jTP_Algorithms;
private javax.swing.JPanel jP_Regulated;
private javax.swing.JPanel jPanel7;
private javax.swing.JLabel jLabel6;
private javax.swing.JLabel jLabel7;
private javax.swing.JLabel jLabel8;
private javax.swing.JTextField jTF_Reg_Source_Peak_Rate;
private javax.swing.JTextField jTF_Reg_Source_Average_Rate;
private javax.swing.JTextField jTF_Reg_Maximum_Burst_Size;
private javax.swing.JLabel jLabel9;
private javax.swing.JLabel jLabel10;
private javax.swing.JLabel jLabel11;
private javax.swing.JPanel jP_NonRegulated;
private javax.swing.JPanel jPanel10;
private javax.swing.JLabel jLabel12;
private javax.swing.JLabel jLabel13;
private javax.swing.JLabel jLabel14;
private javax.swing.JTextField jTF_NonReg_Source_Peak_Rate;
private javax.swing.JTextField jTF_NonReg_On_Off_Rate;
private javax.swing.JTextField jTF_NonReg_Off_On_Rate;
private javax.swing.JLabel jLabel16;
private javax.swing.JLabel jLabel15;
private javax.swing.JTextField jTF_Output_File;
// End of variables declaration//GEN-END:variables

  // Build the command line from the parameters in the text
  // fields
  // Returns null if anything is missing (and shows the
  // appropriate error in a msgbox
  String [] getCommandLine( )
  {
    String [] argsVector = new String[10];

    if( jTP_Algorithms.getSelectedIndex() == 0 )
    {
      if (T2functions.Is_some_field_missing( jP_Regulated )) return null;
      argsVector[0] = "elwalidmitra95";
      argsVector[7] = jTF_Reg_Source_Peak_Rate.getText();
      argsVector[8] = jTF_Reg_Source_Average_Rate.getText();
      argsVector[9] = jTF_Reg_Maximum_Burst_Size.getText();
    }
    else
    {
      if (T2functions.Is_some_field_missing( jP_NonRegulated )) return null;
      argsVector[0] = "guerin91";
      argsVector[7] = jTF_NonReg_Source_Peak_Rate.getText();
      argsVector[8] = jTF_NonReg_On_Off_Rate.getText();
      argsVector[9] = jTF_NonReg_Off_On_Rate.getText();
    }

    if (T2functions.Is_some_field_missing((javax.swing.JComponent ) this )) return null;
    argsVector[1] = "-b";
    argsVector[2] = jTF_Buffer_Size.getText();
    argsVector[3] = "-c";
    argsVector[4] = jTF_Transmission_Capacity.getText();
    argsVector[5] = "-l";
    argsVector[6] = jTF_QoS.getText();

    return argsVector;

  }

  public String getOutFile ()
  {
    return (jTF_Output_File.getText());
  }



}
