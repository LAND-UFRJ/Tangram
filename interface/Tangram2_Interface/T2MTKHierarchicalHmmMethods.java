/*
 * To change this template, choose Tools \| Templates
 * and open the template in the editor.
 */

/*
 * T2hmm.java
 *
 * Created on 09/03/2009, 13:29:17
 */

/**
 *
 * @author Bruno
 */

package Tangram2;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;

public class T2MTKHierarchicalHmmMethods extends javax.swing.JFrame {

    /** Creates new form T2hmm */
    public T2MTKHierarchicalHmmMethods() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jPanel8 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jSpinner4 = new javax.swing.JSpinner();
        jCheckBox1 = new javax.swing.JCheckBox();
        jTextField7 = new javax.swing.JTextField();
        jCheckBox2 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tangram II");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jButton5.setText("Browse");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("Observation Source");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Viterbi", jPanel2);

        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel3ComponentShown(evt);
            }
        });

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Observation Source");

        jButton6.setText("Browse");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        jCheckBox3.setText("Likelihood Fast");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addComponent(jCheckBox3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Likelihood", jPanel3);

        jPanel6.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel6ComponentShown(evt);
            }
        });

        jLabel6.setText("Number of Steps");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 209, Short.MAX_VALUE)
                .addGap(365, 365, 365))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulate", jPanel6);

        jPanel8.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel8ComponentShown(evt);
            }
        });

        jButton8.setText("Browse");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel8.setText("Observation Source");

        jCheckBox4.setText("Steady State");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox4)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8)))
                .addGap(24, 24, 24))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 536, Short.MAX_VALUE)
                .addGap(73, 73, 73))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("State Probability", jPanel8);

        jPanel5.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel5ComponentShown(evt);
            }
        });

        jLabel11.setText("Observation Source");

        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Iterations");

        jCheckBox1.setText("Log Likelihood Threshold");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jTextField7.setText("0.001");
        jTextField7.setEnabled(false);

        jCheckBox2.setText("Training fast");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)))))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(478, Short.MAX_VALUE)
                .addComponent(jCheckBox2)
                .addGap(3, 3, 3))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jSpinner4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(121, 121, 121)
                .addComponent(jCheckBox2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Training", jPanel5);

        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentShown(evt);
            }
        });

        jLabel3.setText("Observation Source");

        jButton7.setText("Browse");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel4.setText("Future Steps");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(201, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Symbol Value Sum Distribution", jPanel4);

        jPanel7.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel7ComponentShown(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 583, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Symbol Value Time Average", jPanel7);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jButton2.setText("Run");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("View Matrix");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Results");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_measures.gif"))); // NOI18N

        jLabel7.setText(T2MTKCommon.statusBarUpdate());
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 735, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

       resForm = new T2MTKHmmResults(this.results);
       resForm.setVisible(true);


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new T2MTKHierarchicalHmmMatrixperm().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
        fc.setCurrentDirectory(new File(currdir+currmodel+".HMM.parameters"));
        int ret = fc.showOpenDialog(null);
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = fc.getSelectedFile();
            jTextField1.setText(file.getPath());
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
        fc.setCurrentDirectory(new File(currdir+currmodel+".HMM.parameters"));
        int ret = fc.showOpenDialog(null);
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = fc.getSelectedFile();
            jTextField2.setText(file.getPath());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int method = jTabbedPane1.getSelectedIndex();
        boolean hasResult = false;
        
        switch (method){
            case 0: hasResult = viterbi();
                    break;
            case 1: hasResult = likelihood();
                    break;
            case 2: hasResult = simulate();
                    break;
            case 3: hasResult = state_prob();
                    break;
            case 4: hasResult = train();
                    break;
            case 5: hasResult = symb_sum_dist();
                    break;
            case 6: hasResult = symb_tavg();
                    break;
        }

        if(hasResult)  {
            T2MTKCommon.infoMessage("", "Method has successfully finished. To view its results, click on the Results button.");
            jButton4.setEnabled(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
        fc.setCurrentDirectory(new File(currdir+currmodel+".HMM.parameters"));
        int ret = fc.showOpenDialog(null);
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = fc.getSelectedFile();
            jTextField5.setText(file.getPath());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        File resFile= new File(currdir+currmodel+".HMM.viterbi.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel2ComponentShown

    private void jPanel3ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel3ComponentShown
        File resFile= new File(currdir+currmodel+".HMM.likelihood.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel3ComponentShown

    private void jPanel6ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel6ComponentShown
        File resFile= new File(currdir+currmodel+".HMM.simulate.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel6ComponentShown

    private void jPanel8ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel8ComponentShown
        File resFile= new File(currdir+currmodel+".HMM.state_prob.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel8ComponentShown

    private void jPanel5ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel5ComponentShown
        
            File resFile= new File(currdir+currmodel+".HMM.training.output");
            if(resFile.exists()){
                jButton4.setEnabled(true);
                try {
                    BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                    results = "";
                    while(resBuf.ready()){
                        results += resBuf.readLine()+"\n";
                    }
                    resBuf.close();
                } catch (FileNotFoundException ex) {
                    T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
                }
            }
            else jButton4.setEnabled(false);
        
    }//GEN-LAST:event_jPanel5ComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        if(!obj.equals("ghmm")){
            jTabbedPane1.removeTabAt(6);
            jTabbedPane1.removeTabAt(5);
            //jTabbedPane1.setEnabledAt(5, false);
            //jTabbedPane1.setEnabledAt(6, false);
        }
        SpinnerModel sModel1 = new SpinnerNumberModel(1,1,999999,1);
        jSpinner2.setModel(sModel1);
        SpinnerModel sModel2 = new SpinnerNumberModel(1,1,999999,1);
        jSpinner4.setModel(sModel2);
    }//GEN-LAST:event_formComponentShown

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if(jCheckBox1.isSelected()){
            jTextField7.setEnabled(true);
        }else jTextField7.setEnabled(false);
}//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
        fc.setCurrentDirectory(new File(currdir+currmodel+".HMM.parameters"));
        int ret = fc.showOpenDialog(null);
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = fc.getSelectedFile();
            jTextField3.setText(file.getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
        fc.setCurrentDirectory(new File(currdir+currmodel+".HMM.parameters"));
        int ret = fc.showOpenDialog(null);
        if (ret == javax.swing.JFileChooser.APPROVE_OPTION) {
            java.io.File file = fc.getSelectedFile();
            jTextField4.setText(file.getPath());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jPanel4ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentShown
        SpinnerModel sModel = new SpinnerNumberModel(1,1,999999,1);
        jSpinner1.setModel(sModel);
        File resFile= new File(currdir+currmodel+".HMM.symb_sum_dist.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel4ComponentShown

    private void jPanel7ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel7ComponentShown
        File resFile= new File(currdir+currmodel+".HMM.symb_tavg.output");
        if(resFile.exists()){
            jButton4.setEnabled(true);
            try {
                BufferedReader resBuf = new BufferedReader(new FileReader(resFile));
                results = "";
                while(resBuf.ready()){
                    results += resBuf.readLine()+"\n";
                }
                resBuf.close();
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading results file: "+ex.getMessage());
            }
        }
        else jButton4.setEnabled(false);
    }//GEN-LAST:event_jPanel7ComponentShown

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if(jCheckBox4.isSelected()){
            jButton8.setEnabled(false);
            jTextField5.setEnabled(false);
            jLabel8.setEnabled(false);
        }else{
            jButton8.setEnabled(true);
            jTextField5.setEnabled(true);
            jLabel8.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void createHierarchicalHmm(String obsFile){

        T2MTKCommon.createCmds();
        if(!obsFile.equals("")){

            T2MTKCommon.addCmd("obs = new intvalue()");
            T2MTKCommon.addCmd("obs.load(\""+obsFile+"\")");

        }
        T2MTKCommon.addCmd("store = new intvalue()");
        T2MTKCommon.addCmd(obj+" = new "+obj+"()");
        T2MTKCommon.addCmd(obj+".load(\""+currdir+"/"+currmodel+".HMM.parameters\", \"all\")");
        
    }
    private boolean viterbi(){
        
        //OK

        String obsFile = jTextField1.getText();
        if(obsFile.equals("")){
            T2MTKCommon.errorMessage("", "You must to select the observation source file.");
            return false;
        }
        createHierarchicalHmm(obsFile);
        T2MTKCommon.addCmd(obj+".viterbi(obs,store)");
        T2MTKCommon.addCmd("store.save(\""+currdir+currmodel+".HMM.viterbi.hidden_states_path\")");
        T2MTKMessages out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.viterbi.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }

            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;
    }
    private boolean likelihood(){

        //OK
        String obsFile = jTextField2.getText();
        if(obsFile.equals("")){
            T2MTKCommon.errorMessage("", "You must to select the observation source file.");
            return false;
        }
        createHierarchicalHmm(obsFile);
        if(jCheckBox3.isSelected()) T2MTKCommon.addCmd(obj+".likelihood_fast(obs)");
        else  T2MTKCommon.addCmd(obj+".likelihood(obs)");
        T2MTKMessages out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.likelihood.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }
            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;
    }

    private boolean simulate(){

        // OK
        
        T2MTKCommon.clearCmds();
        T2MTKCommon.createCmds();
        T2MTKCommon.addCmd("Simul_Sample = new intvalue()");
        T2MTKCommon.addCmd("Hidden_States_Path = new intvalue()");
        T2MTKCommon.addCmd(obj+" = new "+obj+"()");
        T2MTKCommon.addCmd(obj+".load(\""+currdir+"/"+currmodel+".HMM.parameters\")");
        T2MTKCommon.addCmd(obj+".simulate("+jSpinner2.getValue().toString()+",Simul_Sample,Hidden_States_Path)");
        T2MTKCommon.addCmd("Simul_Sample.display(sample)");
        T2MTKCommon.addCmd("Simul_Sample.save(\""+currdir+"/"+currmodel+".HMM.simulate.simul_sample\")");
        T2MTKCommon.addCmd("Hidden_States_Path.display(sample)");
        T2MTKCommon.addCmd("Hidden_States_Path.save(\""+currdir+"/"+currmodel+".HMM.simulate.hidden_states_path\")");
        T2MTKMessages out  = T2MTKCommon.exec();

        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.simulate.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }
            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;

    }

    private boolean state_prob(){

        //OK

        String obsFile = jTextField5.getText();
        createHierarchicalHmm(obsFile);
        if(jCheckBox4.isSelected()) T2MTKCommon.addCmd(obj+".state_prob()");
        else{
            if(obsFile.equals("")){
                T2MTKCommon.errorMessage("", "You must specify a observation source file.");
                return false;
            }else T2MTKCommon.addCmd(obj+".state_prob(obs)");
        }
        T2MTKMessages out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.state_prob.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }

            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;
    }
    private boolean train(){


        T2MTKMessages out = new T2MTKMessages();
        String obsFile = jTextField3.getText();
        if(obsFile.equals("")){
            T2MTKCommon.errorMessage("", "You must to select the observation source file.");
            return false;
        }
        String params = jSpinner4.getValue().toString()+",";
        if(jTextField7.isEnabled()) params += jTextField7.getText()+",";
        createHierarchicalHmm(obsFile);
        params += "obs";
        if(jCheckBox2.isSelected()) T2MTKCommon.addCmd(obj+".training_fast("+params+")");
        else T2MTKCommon.addCmd(obj+".training("+params+")");
        //T2MTKCommon.addCmd(obj+".display(all)");
        T2MTKCommon.addCmd(obj+".save(\""+currdir+currmodel+".HMM.parameters\")");
        
        out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.training.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    //outFile.println(out.getOut().substring(0,out.getOut().indexOf("'all'")));
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }

            //Updating View Matrix Files

            // for ghmm
            if(obj.equals("ghmm")){
                T2MTKGhmm ghmm = T2MTKGhmmIO.read(currdir+currmodel+".HMM.parameters");
                File hiddenStFile = new File(currdir + currmodel + ".HMM.hidden_st.st_trans_prob_mtx");
                if(hiddenStFile.exists()) hiddenStFile.delete();
                try {
                    PrintWriter hiddenStWriter = new PrintWriter(new FileWriter(hiddenStFile),true);
                    for(int i=0;i<ghmm.getHStates();i++){
                        for(int j=0;j<ghmm.getHStates();j++){
                            if(ghmm.getHStatesTransitionMatrix(i, j)>0){
                                hiddenStWriter.println((i+1)+" "+(j+1)+" "+ghmm.getHStatesTransitionMatrix(i, j));
                            }
                        }
                    }
                    hiddenStWriter.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot update the file: "+hiddenStFile.getName()+". View matrix will not show new data.");
                }
                for(int i=0;i<ghmm.getHStates();i++){
                    File internalStFile = new File(currdir + currmodel + ".HMM.internal_st_"+i+".st_trans_prob_mtx");
                    if(internalStFile.exists()) internalStFile.delete();
                    try {
                        PrintWriter internalStWriter = new PrintWriter(new FileWriter(internalStFile),true);
                        if(ghmm.get_0to1TransitionProb(i)>0){
                            internalStWriter.println("1 2 "+ghmm.get_0to1TransitionProb(i));
                        }
                        if(1-ghmm.get_0to1TransitionProb(i)>0){
                            internalStWriter.println("1 1 "+(1-ghmm.get_0to1TransitionProb(i)));
                        }
                        if(ghmm.get_1to0TransitionProb(i)>0){
                            internalStWriter.println("2 1 "+ghmm.get_1to0TransitionProb(i));
                        }
                        if(1-ghmm.get_1to0TransitionProb(i)>0){
                            internalStWriter.println("2 2 "+(1-ghmm.get_1to0TransitionProb(i)));
                        }
                        internalStWriter.close();
                    } catch (IOException ex) {
                        T2MTKCommon.errorMessage("", "Cannot update the file: "+internalStFile.getName()+". View matrix will not show new data.");
                    }
                }
            }

            // for General Hierarchical HMM

            if(!obj.equals("ghmm")){
                T2MTKHierarchicalHmm hhmm = T2MTKHierarchicalHmmIO.read(currdir+currmodel+".HMM.parameters");
                File hiddenStFile = new File(currdir + currmodel + ".HMM.hidden_st.st_trans_prob_mtx");
                if(hiddenStFile.exists()) hiddenStFile.delete();
                try {
                    PrintWriter hiddenStWriter = new PrintWriter(new FileWriter(hiddenStFile), true);
                    for(int i=0;i<hhmm.getHStates();i++){
                        for(int j=0;j<hhmm.getHStates();j++){
                            double value = hhmm.getHiddenStTransProb(i, j);
                            if(value>0){
                                hiddenStWriter.println((i+1)+" "+(j+1)+" "+value);
                            }
                        }
                    }
                    hiddenStWriter.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot update the file: "+hiddenStFile.getName()+". View matrix will not show new data.");
                }
                for(int i=0;i<hhmm.getHStates();i++){
                    File internalStFile = new File(currdir+currmodel+".HMM.internal_st_"+i+".st_trans_prob_mtx");
                    if(internalStFile.exists()) internalStFile.delete();
                    try {
                        PrintWriter internalStWriter = new PrintWriter(new FileWriter(internalStFile), true);
                        for(int j=0;j<hhmm.getSymbols();j++){
                            for(int k=0;k<hhmm.getSymbols();k++){
                                double value = hhmm.getSymbolsTransProb(i, j, k);
                                if(value>0){
                                    internalStWriter.println((j+1)+" "+(k+1)+" "+value);
                                }
                            }
                        }
                        internalStWriter.close();
                    } catch (IOException ex) {
                        T2MTKCommon.errorMessage("", "Cannot update the file: "+internalStFile.getName()+". View matrix will not show new data.");
                    }
                    
                }
            }

            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }

        return false;
    }
    
    private boolean symb_tavg(){

        
        String obsFile = ""; //jTextField4.getText();
        createHierarchicalHmm(obsFile);
        T2MTKCommon.addCmd(obj+".symb_tavg()");
        
        T2MTKMessages out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.symb_tavg.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }

            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;
    }

    private boolean symb_sum_dist(){


        String obsFile = jTextField4.getText();
        createHierarchicalHmm(obsFile);
        T2MTKCommon.addCmd(obj+".symb_sum_dist(obs,"+jSpinner1.getValue()+")");
        T2MTKMessages out  = T2MTKCommon.exec();
        if(out.getError().equals("")){
            results = out.getOut();
            if(!out.getOut().equals("")){
                File output = new File(currdir+currmodel+".HMM.symb_sum_dist.output");
                if(output.exists()) output.delete();
                try {
                    PrintWriter outFile = new PrintWriter(new FileWriter(output), true);
                    outFile.println(out.getOut());
                    outFile.close();
                } catch (IOException ex) {
                    T2MTKCommon.errorMessage("", "Cannot create results file.");
                }
            }

            return true;
        }else{
            T2MTKCommon.errorMessage("", out.getError());
        }
        return false;
    }


    public String getResults() {
        return results;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new T2MTKHierarchicalHmmMethods().setVisible(true);
            }
        });
    }

    private String currdir = T2MTKCommon.currdir;
    private String currmodel = T2MTKCommon.currmodel;
    private String results = "";
    private T2MTKHmmResults resForm;
    private DefaultListModel lModel = new DefaultListModel();
    private String obj = T2MTKMain.modelType;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables

}
