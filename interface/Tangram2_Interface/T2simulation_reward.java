/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

/*
 * T2simulation_reward.java
 *
 * Created on March 6, 2002, 5:29 PM
 */


import java.util.StringTokenizer;
import javax.swing.JTable;

public class T2simulation_reward extends javax.swing.JFrame {

    /** Creates new form T2simulation_reward */
    public T2simulation_reward( T2simulation mainholder, T2reward_data rew_data)
    {
        reward_data = rew_data;
        simulation = mainholder;
        initComponents();
        initComponentsManual ();
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jB_ok = new javax.swing.JButton();
        jB_cancel = new javax.swing.JButton();
        jP_Options = new javax.swing.JPanel();
        jP_Reward = new javax.swing.JPanel();
        jP_Rew_Files = new javax.swing.JPanel();
        jTB_no_trace = new javax.swing.JToggleButton();
        jTB_trace = new javax.swing.JToggleButton();
        jB_animplot = new javax.swing.JButton();
        jL_Behavior = new javax.swing.JLabel();
        jP_Reward1 = new javax.swing.JPanel();
        jL_Obs_11 = new javax.swing.JLabel();
        jP_Reward_Option1 = new javax.swing.JPanel();
        jTB_Mean = new javax.swing.JToggleButton();
        jTB_Min = new javax.swing.JToggleButton();
        jTB_Max = new javax.swing.JToggleButton();
        jTB_Error = new javax.swing.JToggleButton();
        jL_Obs_31 = new javax.swing.JLabel();
        jL_Rew_Files = new javax.swing.JLabel();
        jL_Rew_Levels = new javax.swing.JLabel();
        jP_Reward2 = new javax.swing.JPanel();
        jSP_Table_Rare = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jL_Tangram_Picture1 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Tangram II [Reward Options]");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jB_ok.setToolTipText("Save configuration");
        jB_ok.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_ok.setText("OK");
        jB_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_okActionPerformed(evt);
            }
        });

        getContentPane().add(jB_ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 10, 110, 30));

        jB_cancel.setToolTipText("Cancel configuration");
        jB_cancel.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_cancel.setText("Cancel");
        jB_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_cancelActionPerformed(evt);
            }
        });

        getContentPane().add(jB_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 110, 30));

        jP_Options.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Options.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jP_Reward.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Reward.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jP_Rew_Files.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTB_no_trace.setFont(new java.awt.Font("Dialog", 1, 9));
        jTB_no_trace.setText("No Trace");
        jP_Rew_Files.add(jTB_no_trace, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 88, 20));

        jTB_trace.setFont(new java.awt.Font("Dialog", 1, 9));
        jTB_trace.setText("Trace");
        jTB_trace.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTB_traceStateChanged(evt);
            }
        });

        jP_Rew_Files.add(jTB_trace, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 0, 88, 20));

        jP_Reward.add(jP_Rew_Files, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 175, 20));

        jB_animplot.setFont(new java.awt.Font("Dialog", 1, 9));
        jB_animplot.setText("Animplot Options");
        jB_animplot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_animplotActionPerformed(evt);
            }
        });

        jP_Reward.add(jB_animplot, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 145, 20));

        jP_Options.add(jP_Reward, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 105, 545, 40));

        jL_Behavior.setText("Reward Behavior");
        jL_Behavior.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Behavior, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, 140, 20));

        jP_Reward1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Reward1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_Obs_11.setText("  Used when more than one reward");
        jL_Obs_11.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Reward1.add(jL_Obs_11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 250, -1));

        jP_Reward_Option1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTB_Mean.setFont(new java.awt.Font("Dialog", 1, 10));
        jTB_Mean.setText("Mean");
        jP_Reward_Option1.add(jTB_Mean, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 20));

        jTB_Min.setFont(new java.awt.Font("Dialog", 1, 10));
        jTB_Min.setText("Min");
        jP_Reward_Option1.add(jTB_Min, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 80, 20));

        jTB_Max.setFont(new java.awt.Font("Dialog", 1, 10));
        jTB_Max.setText("Max");
        jP_Reward_Option1.add(jTB_Max, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 80, 20));

        jTB_Error.setFont(new java.awt.Font("Dialog", 1, 10));
        jTB_Error.setText("Error");
        jP_Reward_Option1.add(jTB_Error, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 80, 20));

        jP_Reward1.add(jP_Reward_Option1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 40));

        jL_Obs_31.setText("is assigned to the same value.");
        jL_Obs_31.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Reward1.add(jL_Obs_31, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 33, -1, -1));

        jP_Options.add(jP_Reward1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 25, 545, 60));

        jL_Rew_Files.setText("Reward Trace Files");
        jL_Rew_Files.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Rew_Files, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, -1, 20));

        jL_Rew_Levels.setText("Reward Options");
        jL_Rew_Levels.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Options.add(jL_Rew_Levels, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 145, -1, 20));

        jP_Reward2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Reward2.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jSP_Table_Rare.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSP_Table_RareFocusLost(evt);
            }
        });

        jP_Reward2.add(jSP_Table_Rare, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 525, 195));

        jP_Options.add(jP_Reward2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 165, 545, 215));

        getContentPane().add(jP_Options, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 570, 390));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(705, 405, 1, 1));

        jL_Tangram_Picture1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_simulation.gif")));
        getContentPane().add(jL_Tangram_Picture1, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 370, -1, -1));

        pack();
    }//GEN-END:initComponents

    private void jB_animplotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_animplotActionPerformed
        this.setEnabled(false);
        (new T2animplot( this, reward_data )).show();
    }//GEN-LAST:event_jB_animplotActionPerformed

    private void jTB_traceStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTB_traceStateChanged
        reward_data.generate_trace = jTB_trace.isSelected( );
        if( !reward_data.generate_trace )
        {
            for( int i = 0; i < reward_data.reward_plot_set.length; i++ )
                reward_data.reward_plot_set[i] = false;
        }
        jB_animplot.setEnabled( jTB_trace.isSelected( ) );        
    }//GEN-LAST:event_jTB_traceStateChanged
      
    private void jSP_Table_RareFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSP_Table_RareFocusLost
        // Add your handling code here:
   
    }//GEN-LAST:event_jSP_Table_RareFocusLost

    //*********************************** initComponents Manual *********************************************
  private void initComponentsManual () {
    String line,line2;
    Process Proc;
    int lines_in_table, size_of_table;    
    
    javax.swing.ButtonGroup group3 = new javax.swing.ButtonGroup();
    group3.add(jTB_Mean);
    group3.add(jTB_Max);
    group3.add(jTB_Min);
    group3.add(jTB_Error);

    javax.swing.ButtonGroup group5 = new javax.swing.ButtonGroup();
    group5.add(jTB_no_trace);
    group5.add(jTB_trace);
    
    // Initialization of the buttons acordingly with simulation parameters
    if ( simulation.rewopt == " -w 1" )
    {
        jTB_Mean.setSelected(true);
    }
    else if ( simulation.rewopt == " -w 2" )
    {
        jTB_Max.setSelected(true);
    } 
    else if ( simulation.rewopt == " -w 3" )
    {
        jTB_Min.setSelected(true);
    } 
    else if ( simulation.rewopt == " -w 4" )
    {
        jTB_Error.setSelected(true);
    } 

    if ( simulation.rewfiles == " -y" )
    {
        jTB_trace.setSelected(true);
        jB_animplot.setEnabled( true );
    }
    else
    {
        jTB_no_trace.setSelected(true);
        jB_animplot.setEnabled( false );
    }  
    
    if ( jT_Rare_event == null )
    {
 
         try {
            // Generate file .rewards with the rewards names
            // usage: getNames -r <modelname>
             //generate parser using tgif
            if (simulation.generate_parser()!=0) {
               javax.swing.JOptionPane.showMessageDialog(this,"Error - "+ simulation.modelenv.curmodel + ".parser not created!","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
               return;
            }
            Proc = Runtime.getRuntime().exec( "getNames -r " + simulation.modelenv.curmodel);
            Proc.waitFor();
            if(Proc.exitValue() != 0) {
              javax.swing.JOptionPane.showMessageDialog(this,"getNames error","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
            }
          }
          catch( Exception ex ) {
            javax.swing.JOptionPane.showMessageDialog(this,"getNames could not be executed","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          }

          /*Getting the number of rows of the <model_name>.rewards*/

          lines_in_table = 0;    
          try {
            java.io.FileReader f = new java.io.FileReader( simulation.modelenv.curmodel + ".rewards" );
            java.io.BufferedReader b = new java.io.BufferedReader( f );
            while( (line = b.readLine()) != null ){
                lines_in_table++;
            }
            b.close();
            f.close();
          }
          catch( java.io.IOException e ) {
            javax.swing.JOptionPane.showMessageDialog(this,"Couldn't read information from " + simulation.modelenv.curmodel + ".rewards.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          }
          size_of_table = lines_in_table;

          // Object[][] tableContents = new Object[lines_in_table][3];
          Object[][] tableContents = new Object[lines_in_table][2];
    
    
        //Exhibiting rewards in the table

        try {
            lines_in_table = 0;    
            java.io.FileReader f = new java.io.FileReader( simulation.modelenv.curmodel + ".rewards" );
            java.io.BufferedReader b = new java.io.BufferedReader( f );
            while( (line = b.readLine()) != null ){
              if( line.trim().length() > 0 ){
                StringTokenizer sp = new StringTokenizer(line,".");

                sp.nextToken();
                sp.nextToken();

                String name = sp.nextToken() + "." + sp.nextToken();
                tableContents[lines_in_table][0] = name;
                tableContents[lines_in_table][1] = null;
                //tableContents[lines_in_table][2] = null;

               try{         
                 java.io.FileReader f2 = new java.io.FileReader( simulation.modelenv.curmodel + ".reward_levels."+ name);
                 java.io.BufferedReader b2 = new java.io.BufferedReader( f2 );
                 line2 = b2.readLine();
                 line2 = b2.readLine();
                 if (line2 != null) 
                 {
                    tableContents[lines_in_table][1] = line2.trim();
                 }   
                 b2.close();
                 f2.close();
                }
                catch(java.io.IOException e){
                }
                lines_in_table++;
               }
            }
            b.close();
            f.close();
          }
          catch( java.io.IOException e ) {
            javax.swing.JOptionPane.showMessageDialog(this,"Couldn't read information from " + simulation.modelenv.curmodel + ".rewards.","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
          }

        //Creating the table dinamically
        jT_Rare_event = new javax.swing.JTable(size_of_table,2);
            jT_Rare_event.setModel( 
               new javax.swing.table.DefaultTableModel(
                  tableContents,
                  new String [] {"Variable Names", "Max Values"}
               )
               {
                  Class[] types = new Class [] 
                  {
                     java.lang.String.class, java.lang.String.class
                  };
                  boolean[] canEdit = new boolean [] {
                     false, true
                  };

                  public Class getColumnClass(int columnIndex) {
                     return types [columnIndex];
                  }


                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                     return canEdit [columnIndex];
                  }
               }
            );

        jT_Rare_event.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    jT_Rare_eventFocusLost(evt);
                }
            });              


        jT_Rare_event.setEnabled(true);
    
    
    }
    
    jSP_Table_Rare.setViewportView(jT_Rare_event);

  
  }

  private void jT_Rare_eventFocusLost(java.awt.event.FocusEvent evt) {
        
    jT_Rare_event.editingStopped(null);
    
  }

    private void jB_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_okActionPerformed
       int i, erro;
       float value;
       
       jB_ok.requestFocus();
       
       jT_Rare_event.editingStopped(null);
  
       //defines the reward option
              
       simulation.rewopt=" -w 1";
       if (jTB_Max.isSelected()) simulation.rewopt = " -w 2";
       else if (jTB_Min.isSelected()) simulation.rewopt = " -w 3";
       else if (jTB_Error.isSelected()) simulation.rewopt = " -w 4";
       
       //defines if the reward trace files will be created
       simulation.rewfiles="";
       if (jTB_trace.isSelected()) simulation.rewfiles = " -y";

       //Saving files with reward levels
       
       String dataName, dataValue;
       i = 0;
       erro=0;
       while( i < jT_Rare_event.getRowCount() ){
          dataName  = (String) jT_Rare_event.getValueAt( i, 0 );
          dataValue = (String) jT_Rare_event.getValueAt( i, 1 );
          if ((dataValue != null) && (dataValue.trim().length() > 0) ) {
             try{
                Float.parseFloat(dataValue);
                try{
                   java.io.FileWriter     f = new java.io.FileWriter( simulation.modelenv.curmodel + ".reward_levels." + dataName.trim() );
                   java.io.BufferedWriter b = new java.io.BufferedWriter( f );
                   b.write( "1" + "\n" );
                   b.write(dataValue.trim());
                   b.close();
                   f.close();
                }
                catch (java.io.IOException e ) {
                   javax.swing.JOptionPane.showMessageDialog(this,"Couldn't open files");
                }
             }
             catch( Exception e){
                jT_Rare_event.setValueAt("",i,1);
                erro = 1;          
             }
          }
          else
          {
             Process Proc2;    
             try {
                Proc2 = Runtime.getRuntime().exec( "rm -f " + simulation.modelenv.curmodel+ ".reward_levels." + dataName.trim());
                Proc2.waitFor();
                if(Proc2.exitValue() != 0) {
                   javax.swing.JOptionPane.showMessageDialog(this,"error","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
                }
             }
             catch( Exception ex ) {
               javax.swing.JOptionPane.showMessageDialog(this,"could not remove file","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
             }
          }
          i++;
       }
       if (erro==1){
         javax.swing.JOptionPane.showMessageDialog(this,"Reward level must be a float number");
       }
       
       simulation.setEnabled(true);
       dispose();
     
    }//GEN-LAST:event_jB_okActionPerformed

    private void jB_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_cancelActionPerformed
        simulation.setEnabled(true);
        dispose();             
    }//GEN-LAST:event_jB_cancelActionPerformed

    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        simulation.setEnabled(true);
        dispose();             
    }//GEN-LAST:event_exitForm


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jTB_Error;
    private javax.swing.JPanel jP_Reward2;
    private javax.swing.JToggleButton jTB_no_trace;
    private javax.swing.JPanel jP_Reward1;
    private javax.swing.JPanel jP_Reward_Option1;
    private javax.swing.JScrollPane jSP_Table_Rare;
    private javax.swing.JPanel jP_Reward;
    private javax.swing.JLabel jL_Obs_31;
    private javax.swing.JButton jB_ok;
    private javax.swing.JPanel jP_Options;
    private javax.swing.JPanel jP_Rew_Files;
    private javax.swing.JButton jB_animplot;
    private javax.swing.JLabel jL_Obs_11;
    private javax.swing.JToggleButton jTB_trace;
    private javax.swing.JToggleButton jTB_Max;
    private javax.swing.JLabel jL_Rew_Files;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jB_cancel;
    private javax.swing.JLabel jL_Behavior;
    private javax.swing.JToggleButton jTB_Mean;
    private javax.swing.JLabel jL_Tangram_Picture1;
    private javax.swing.JLabel jL_Rew_Levels;
    private javax.swing.JToggleButton jTB_Min;
    // End of variables declaration//GEN-END:variables
    
    public T2simulation simulation;
    public JTable jT_Rare_event;
    private T2reward_data reward_data;
}
