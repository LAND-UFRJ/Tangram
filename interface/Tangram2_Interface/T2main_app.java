/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2main_app extends javax.swing.JFrame {

  private String version = "3.5.1";
  /* Tgif version 4.2 or later */
  public static String tgif_flags = " -tgrm2 ";
  
  /** Initializes the Form */
  public T2main_app() {
    initComponents ();
    pack ();
    initComponentsManual ();
    System.out.println("Tangram II Tool version "+version+"\nCopyright (C) 1999-2009 LAND - UFRJ (Federal University of Rio de Janeiro)");
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jL_Tangram_Picture = new javax.swing.JLabel();
        jP_Almadem_Project = new javax.swing.JPanel();
        jB_Modeling_Environment = new javax.swing.JButton();
        jB_Traffic_Measurements = new javax.swing.JButton();
        jB_FreeMeeting = new javax.swing.JButton();
        jB_Help = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jL_Tangram_Logo = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Tangram II release "+version);
        setFocusableWindowState(false);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jL_Tangram_Picture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_main.gif")));
        getContentPane().add(jL_Tangram_Picture, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 10, -1, -1));

        jP_Almadem_Project.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Almadem_Project.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));
        jB_Modeling_Environment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/model_main.gif")));
        jB_Modeling_Environment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Modeling_EnvironmentActionPerformed(evt);
            }
        });

        jP_Almadem_Project.add(jB_Modeling_Environment, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 145, 55));

        jB_Traffic_Measurements.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/traffic_main.gif")));
        jB_Traffic_Measurements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Traffic_MeasurementsActionPerformed(evt);
            }
        });

        jP_Almadem_Project.add(jB_Traffic_Measurements, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 145, 55));

        jB_FreeMeeting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/freemeeting_main.gif")));
        jB_FreeMeeting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_FreeMeetingActionPerformed(evt);
            }
        });

        jP_Almadem_Project.add(jB_FreeMeeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 145, 55));

        jB_Help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/help_book.gif")));
        jB_Help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_HelpActionPerformed(evt);
            }
        });

        jP_Almadem_Project.add(jB_Help, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 145, 55));

        getContentPane().add(jP_Almadem_Project, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 50, 315, 130));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(325, 190, 1, 1));

        jL_Tangram_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tangram_logo.gif")));
        getContentPane().add(jL_Tangram_Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 5, -1, -1));

    }// </editor-fold>//GEN-END:initComponents

  private void initComponentsManual()
  {
  

  }
  private void jB_Modeling_EnvironmentActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Modeling_EnvironmentActionPerformed
    new T2modelenv().show();
  }//GEN-LAST:event_jB_Modeling_EnvironmentActionPerformed

  private void jB_Traffic_MeasurementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Traffic_MeasurementsActionPerformed
     new T2traffic().show();
  }//GEN-LAST:event_jB_Traffic_MeasurementsActionPerformed

  private void jB_FreeMeetingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_FreeMeetingActionPerformed
    try {
      Process wb = Runtime.getRuntime().exec("freemeeting");
    }
    catch(Exception exception) {
      javax.swing.JOptionPane.showMessageDialog(this,"FreeMeeting could not be started!", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
  }//GEN-LAST:event_jB_FreeMeetingActionPerformed

  private void jB_HelpActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_HelpActionPerformed
  
    java.lang.String curpdfviewer = null;        
    
    
    /* ---- Read and parse .tangram2.conf looking for the preferred pdf viewer ---- */
    
    int t2configfileok = 1;
    
    // verify if the .tangram2.conf file exist
    java.io.File ftmp = new java.io.File( System.getProperty("user.home")+ "/.tangram2.conf" );
    if (! ftmp.exists())
       //create a default .tangram2.conf file
       t2configfileok = T2modelenv.createtangram2configfile();
       
    if (t2configfileok != -1)
    {
        try  {
          int p;
          String line;

          java.io.FileReader fr = new java.io.FileReader( System.getProperty("user.home")+"/.tangram2.conf" );
          java.io.BufferedReader br = new java.io.BufferedReader(fr);

          while((line = br.readLine()) != null) 
          {
            p = line.indexOf('=');
            if(p > 0) 
            {
              String key = (line.substring(0, p)).trim();
              String value = (line.substring(p+1, line.length())).trim();
              if( key.compareTo( "PDFVIEWER" ) == 0 )
              {
                  curpdfviewer = value;
              }
            }
          }
        }catch(java.io.IOException e) 
        {
          javax.swing.JOptionPane.showMessageDialog(this,"Error -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
          return ;
        }
    }
    /* ---- Launch the pdf viewer ---- */
    
    String manual_path = System.getProperty( "TANGRAM2_HOME"  ) + "/docs/Tangram-II_manual.pdf" ;
    T2modelenv.launch_document_viewer(curpdfviewer,manual_path,"pdf",this);
    
  }//GEN-LAST:event_jB_HelpActionPerformed

  /** Exit the Application */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    System.exit(0);
  }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_FreeMeeting;
    private javax.swing.JButton jB_Help;
    private javax.swing.JButton jB_Modeling_Environment;
    private javax.swing.JButton jB_Traffic_Measurements;
    private javax.swing.JLabel jL_Tangram_Logo;
    private javax.swing.JLabel jL_Tangram_Picture;
    private javax.swing.JPanel jP_Almadem_Project;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
  private Process wb;
  private T2about about;
  
// End of variables declaration
  
public static void verify_tgif_integrity()
{
    java.io.BufferedReader err_tgif = null;
    java.io.BufferedWriter in_tgif = null;
    String line = null, cur_token = null, last_token = null; 
    int i = 0;
    boolean obsolete_tgif = false, has_flags = false;
    Process tgif          = null;
    String errorMessage   = "";
    String obsoleteMessage = " is obsolete.\nPlease, change your PATH variable or install a\nnewer version of tgif from http://bourbon.usc.edu:8001/tgif/.";
    String tangram2supportMessage = " doesn't have TANGRAM-II support.\nPlease read INSTALL from TANGRAM-II and \nrebuild tgif from http://bourbon.usc.edu:8001/tgif/.";
      
    try 
    {
        tgif    = Runtime.getRuntime().exec( new String[]{ "bash","-c", "tgif "+ T2main_app.tgif_flags + " -print -justversion" } );
        err_tgif  = new java.io.BufferedReader( new java.io.InputStreamReader( tgif.getErrorStream() ) );
        in_tgif  = new java.io.BufferedWriter( new java.io.OutputStreamWriter( tgif.getOutputStream() ) );
        
        /* Minimal TGIF version: 4.1 patchlevel 43 */
        while( ( line = err_tgif.readLine() ) != null && !obsolete_tgif )
        {
            // In older versions the string read is empty
            if( line.length() == 0 )
            {
                tgif.destroy();
                obsolete_tgif = true;
                errorMessage = obsoleteMessage;
                break;
            }
            
            if ( ( i = line.indexOf( "Tgif Version" ) ) != -1 )
            {
                line = line.substring(i);
                java.util.StringTokenizer stk  = new java.util.StringTokenizer(
                                                 line,
                                                 new java.lang.String("-()[]: " ) );
                while( stk.hasMoreTokens() )
                {
                    last_token = cur_token;
                    cur_token = stk.nextToken();

                    /* Version = 4.1 */
                    if( last_token != null && 
                        last_token.equals( "Version" ) )
                    {
                        if( cur_token.compareTo( "4.1" ) < 0 )
                        {
                            obsolete_tgif = true;
                            errorMessage = obsoleteMessage;
                            break;
                        }
                        if( cur_token.equals( "4.2" ) )
                        {
                            tgif_flags.concat("-tgrm2");
                            break;
                        }
                    }
                    /* patchlevel = 43 */
                    else if( last_token != null && 
                             last_token.equals( "patchlevel" ) )
                    {
                        if( new Integer( cur_token ).intValue() < 43 )
                        {
                            obsolete_tgif = true;
                            errorMessage = obsoleteMessage;
                            break;
                        }
                    }
                    /* patchlevel >= 46 */
                    else if( last_token != null && 
                             last_token.equals( "patchlevel" ) )
                    {
                        if( new Integer( cur_token ).intValue() >= 46 )
                        {
                            tgif_flags.concat("-tgrm2 ");
                            break;
                        }
                    }
                    /* Distribution = 4.1.44 */
                    else if( last_token != null && 
                             last_token.equals( "distribution" ) )
                    {
                        if( cur_token.compareTo( "4.1.44" ) < 0 )
                        {
                            obsolete_tgif = true;
                            errorMessage = obsoleteMessage;
                            break;
                        }
                    }
                    /* Flags */
                    else if( last_token != null && 
                             last_token.equals( "flags" ) )
                    {
                        has_flags = true;
                        if( cur_token.compareTo( "_TANGRAM_II" ) == 0 )
                        {
                            obsolete_tgif = false;
                        }
                        else
                        {
                            obsolete_tgif = true;
                            errorMessage = tangram2supportMessage;
                            break;
                        }
                    }
                }

                /* If doesn't have flags */
                if( !has_flags && !obsolete_tgif )
                {
                    obsolete_tgif = true;
                    errorMessage = tangram2supportMessage;

                }
                
                break;
            }
        }

        if( obsolete_tgif )
        {
          System.err.println("*************************************************************");
          System.err.println("The version of tgif detected at");
          Process which    = Runtime.getRuntime().exec( new String[]{ "bash","-c", "which tgif" } );
          java.io.BufferedReader inwhich  = new java.io.BufferedReader( new java.io.InputStreamReader( which.getInputStream() ) );
          line = inwhich.readLine();
          System.err.println(line + errorMessage );
          System.err.println("*************************************************************");
          System.exit(1);

        }
    }
    catch( Exception ex )
    {
        System.out.println("Error launching tgif.");
        System.out.flush();
        ex.printStackTrace();
    }
}

  public static void main(java.lang.String[] args) {
    
    boolean check_integrity = true;
    
        
    if (args.length > 0)
    {
        
        if (args[0].indexOf("dont_check_integrity") != -1)
            check_integrity = false;
    }
    
    if (check_integrity)
        verify_tgif_integrity();  

    
    new T2main_app().show (); 
  }
}
