/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2config extends javax.swing.JFrame {

  /** Initializes the Form */
  public T2config(T2modelenv mainholder) {
    modelenv=mainholder;
    initComponents ();
    initComponentsManual ();
    pack ();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
    private void initComponents() {//GEN-BEGIN:initComponents
        jTP_options = new javax.swing.JTabbedPane();
        jP_general = new javax.swing.JPanel();
        jCB_openlast = new javax.swing.JCheckBox();
        jP_separator1 = new javax.swing.JPanel();
        jL_delete_function = new javax.swing.JLabel();
        jSP_dont_remove = new javax.swing.JScrollPane();
        jList_dont_remove = new javax.swing.JList();
        jSP_remove = new javax.swing.JScrollPane();
        jList_remove = new javax.swing.JList();
        jB_add = new javax.swing.JButton();
        jB_add_all = new javax.swing.JButton();
        jB_remove = new javax.swing.JButton();
        jB_remove_all = new javax.swing.JButton();
        jL_dont_remove = new javax.swing.JLabel();
        jL_remove = new javax.swing.JLabel();
        jP_separator3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTF_Text_Editor = new javax.swing.JTextField();
        jTF_PS_Viewer = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTF_Pdf_Viewer = new javax.swing.JTextField();
        jP_model_specific = new javax.swing.JPanel();
        jL_debug_level = new javax.swing.JLabel();
        jCombo_debug_level = new javax.swing.JComboBox();
        jP_explanation = new javax.swing.JPanel();
        jL_dl_explanation = new javax.swing.JLabel();
        jP_separator2 = new javax.swing.JPanel();
        jL_output = new javax.swing.JLabel();
        jRB_screen = new javax.swing.JRadioButton();
        jRB_file = new javax.swing.JRadioButton();
        jTF_file = new javax.swing.JTextField();
        jL_screen = new javax.swing.JLabel();
        jP_op_explanation = new javax.swing.JPanel();
        jL_op_explanation1 = new javax.swing.JLabel();
        jL_op_explanation2 = new javax.swing.JLabel();
        jB_ok = new javax.swing.JButton();
        jB_cancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Tangram II [Config]");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jTP_options.setFont(new java.awt.Font("Dialog", 1, 9));
        jP_general.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_general.setBorder(new javax.swing.border.TitledBorder(null, " Options ", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        jCB_openlast.setFont(new java.awt.Font("Dialog", 1, 10));
        jCB_openlast.setText("Open last model at startup");
        jP_general.add(jCB_openlast, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jP_separator1.setBorder(new javax.swing.border.EtchedBorder());
        jP_general.add(jP_separator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 530, 2));

        jL_delete_function.setText("Delete Function Configuration");
        jL_delete_function.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jL_delete_function, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jList_dont_remove.setBackground(new java.awt.Color(204, 204, 204));
        jSP_dont_remove.setViewportView(jList_dont_remove);

        jP_general.add(jSP_dont_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 195, 170));

        jList_remove.setBackground(new java.awt.Color(204, 204, 204));
        jSP_remove.setViewportView(jList_remove);

        jP_general.add(jSP_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 100, 195, 170));

        jB_add.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_add.setLabel("delete ->");
        jB_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_addActionPerformed(evt);
            }
        });

        jP_general.add(jB_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 100, 90, 20));

        jB_add_all.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_add_all.setLabel("del all ->");
        jB_add_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_add_allActionPerformed(evt);
            }
        });

        jP_general.add(jB_add_all, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 130, 90, 20));

        jB_remove.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_remove.setText("<- add");
        jB_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_removeActionPerformed(evt);
            }
        });

        jP_general.add(jB_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 160, 90, 20));

        jB_remove_all.setFont(new java.awt.Font("Dialog", 0, 10));
        jB_remove_all.setText("<- add all");
        jB_remove_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_remove_allActionPerformed(evt);
            }
        });

        jP_general.add(jB_remove_all, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 190, 90, 20));

        jL_dont_remove.setText("Files not to be removed");
        jL_dont_remove.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jL_dont_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jL_remove.setText("Files to be removed");
        jL_remove.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jL_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 80, -1, -1));

        jP_separator3.setBorder(new javax.swing.border.EtchedBorder());
        jP_general.add(jP_separator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 280, 530, 2));

        jLabel2.setText("Text editor:");
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jLabel3.setText("PS viewer:");
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, -1, -1));

        jP_general.add(jTF_Text_Editor, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 295, 150, 20));

        jP_general.add(jTF_PS_Viewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 295, 150, 20));

        jLabel4.setText("PDF viewer:");
        jLabel4.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_general.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        jP_general.add(jTF_Pdf_Viewer, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 335, 150, 20));

        jTP_options.addTab("General", null, jP_general, "");

        jP_model_specific.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_model_specific.setBorder(new javax.swing.border.TitledBorder(null, " Options ", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 10)));
        jL_debug_level.setText("Debug Level");
        jL_debug_level.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_model_specific.add(jL_debug_level, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jCombo_debug_level.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_model_specific.add(jCombo_debug_level, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 140, 20));

        jP_explanation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_explanation.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_dl_explanation.setText("Define the level of output messages");
        jL_dl_explanation.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_explanation.add(jL_dl_explanation, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jP_model_specific.add(jP_explanation, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 280, 40));

        jP_separator2.setBorder(new javax.swing.border.EtchedBorder());
        jP_model_specific.add(jP_separator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 530, 2));

        jL_output.setText("Output");
        jL_output.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_model_specific.add(jL_output, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jRB_screen.setFont(new java.awt.Font("Dialog", 1, 10));
        jRB_screen.setLabel("Screen");
        jP_model_specific.add(jRB_screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jRB_file.setFont(new java.awt.Font("Dialog", 1, 10));
        jRB_file.setLabel("File");
        jRB_file.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRB_fileStateChanged(evt);
            }
        });

        jP_model_specific.add(jRB_file, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jP_model_specific.add(jTF_file, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 200, 20));

        jL_screen.setText("/dev/ttyp0");
        jL_screen.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_model_specific.add(jL_screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 200, 20));

        jP_op_explanation.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_op_explanation.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_op_explanation1.setText("Writes all system messages to a file named");
        jL_op_explanation1.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_op_explanation.add(jL_op_explanation1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jL_op_explanation2.setText("<modelname>.OUT.xxx");
        jL_op_explanation2.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_op_explanation.add(jL_op_explanation2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jP_model_specific.add(jP_op_explanation, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 320, 60));

        jTP_options.addTab("Model Specific", null, jP_model_specific, "");

        getContentPane().add(jTP_options, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 530, 400));

        jB_ok.setToolTipText("Save configuration");
        jB_ok.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_ok.setText("OK");
        jB_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_okActionPerformed(evt);
            }
        });

        getContentPane().add(jB_ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 10, 110, 30));

        jB_cancel.setToolTipText("Cancel configuration");
        jB_cancel.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_cancel.setText("Cancel");
        jB_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_cancelActionPerformed(evt);
            }
        });

        getContentPane().add(jB_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 50, 110, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_config.gif")));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 330, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 360, 1, 1));

    }//GEN-END:initComponents
  /************************ initComponentsManual procedure **************************/
  private void initComponentsManual () {
    /************* General config data *************/
    //Check the state of the 'Open last model' check box
    jCB_openlast.setSelected(modelenv.openlastmodel);

    //Data vectors for the two jLists

    //this extensions will not be removed (copied from modelenv.data1)
    data1 = (java.util.Vector)modelenv.data1.clone();

    //this extensions will be removed
    data2 = new java.util.Vector ();

    //Make the necessary transfers from data1 to data2
    for(int i = 0; i < modelenv.files2rm.size(); i++) {
      Object filename = modelenv.files2rm.get(i);
      data1.remove(filename);
      data2.add(filename);
    }

    //Wrap everything inside the JLists
    jList_dont_remove.setListData(data1);
    jList_remove.setListData(data2);

    jTF_Text_Editor.setText(modelenv.cureditor);
    jTF_PS_Viewer.setText(modelenv.curpsviewer);
    jTF_Pdf_Viewer.setText(modelenv.curpdfviewer);




    /********** Model-Specific config data **********/

    if( modelenv.curmodel.trim().length() > 0 ) {
      //Prepare the Debug level combo box
      jCombo_debug_level.addItem("0 - (Minimum)");
      jCombo_debug_level.addItem("1");
      jCombo_debug_level.addItem("2");
      jCombo_debug_level.addItem("3");
      jCombo_debug_level.addItem("4 - (Maximum)");
      jCombo_debug_level.setSelectedIndex(modelenv.debuglevel);
      //Adjust things around the two radio buttons
      javax.swing.ButtonGroup group1 = new javax.swing.ButtonGroup();
      group1.add(jRB_screen);
      group1.add(jRB_file);
      jL_screen.setText(modelenv.outputscreen);
      if(modelenv.outputdevice) {
        jRB_file.setSelected(true);
        jTF_file.setText(modelenv.outputfile);
      }
      else {
        jRB_screen.setSelected(true);
        jTF_file.setEnabled(false);
      }
    } else {
      //Disable Model Specific Configuration
      jTP_options.setEnabledAt(1,false);
    }
  }

  private void jB_okActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_okActionPerformed
    //OK button - save changes and close the form
    java.util.Hashtable t2conf = new java.util.Hashtable(11);
    java.util.Hashtable modelconf = new java.util.Hashtable(10);

    //Read and parse .tangram2.conf
    try  {
      int p;
      String line;

      java.io.FileReader fr = new java.io.FileReader( System.getProperty("user.home")+"/.tangram2.conf" );
      java.io.BufferedReader br = new java.io.BufferedReader(fr);

      while((line = br.readLine()) != null) {
        p = line.indexOf('=');
        if(p > 0) {
          String key = (line.substring(0, p)).trim();
          String value = (line.substring(p+1, line.length())).trim();
          t2conf.put( key, (value != null ? value:" ") );
        }
        else
          javax.swing.JOptionPane.showMessageDialog(this,"Error in .tangram2.conf", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
      }
    }
    catch(java.io.IOException e) {
      javax.swing.JOptionPane.showMessageDialog(this,"Error -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }

    //Overwrite the hashtable with the changes
    t2conf.put("OPENLASTMODEL", ( jCB_openlast.isSelected() ? "yes":"no" ) );
    if(jCB_openlast.isSelected()) {
      t2conf.put("CURDIR", modelenv.curdir);
      t2conf.put("CURMODEL", modelenv.curmodel);
    }
    else {
      t2conf.put("CURDIR", " ");
      t2conf.put("CURMODEL", " ");
    }

    t2conf.put("EDITOR",jTF_Text_Editor.getText());
    t2conf.put("PSVIEWER",jTF_PS_Viewer.getText());
    t2conf.put("PDFVIEWER",jTF_Pdf_Viewer.getText());

    //System.out.println("current " + jTF_Text_Editor.getText() );

    String f2rm = "";

    for(int i = 0; i < data2.size(); i++)
      f2rm = f2rm + data2.get(i) + " " ;

    f2rm.trim();
    t2conf.put("FILES2RM", f2rm);

    //Write everything to the file
    try {
      java.io.FileWriter fw = new java.io.FileWriter( System.getProperty("user.home")+"/.tangram2.conf" );
      java.io.BufferedWriter bw = new java.io.BufferedWriter(fw);

      for (java.util.Enumeration e = t2conf.keys() ; e.hasMoreElements() ;) {
          Object key = e.nextElement();
          bw.write(key + "=" + t2conf.get(key));
          bw.newLine();
      }

      bw.close();
      fw.close();
    }
    catch(java.io.IOException e) {
      javax.swing.JOptionPane.showMessageDialog(this,"Error -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    //System.out.println(jTP_options.indexOfTab("General"));
    
    if(jTP_options.isEnabledAt(1)) {
      //Read and parse <model>.config
      try {
        int p;
        String line;

        java.io.FileReader fr = new java.io.FileReader( modelenv.curdir +  "/" + modelenv.curmodel + ".config");
        java.io.BufferedReader br = new java.io.BufferedReader(fr);

        while((line = br.readLine()) != null) {
          p = line.indexOf('=');
          if(p > 0) {
            String key = (line.substring(0, p)).trim();
            String value = (line.substring(p+1, line.length())).trim();
            modelconf.put( key, (value != null ? value:" ") );
          }
          else
            javax.swing.JOptionPane.showMessageDialog(this,"Error in " + modelenv.curdir +  "/" + modelenv.curmodel + ".config", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
      } catch(java.io.IOException e) {
        javax.swing.JOptionPane.showMessageDialog(this,"Error -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
      }

      //Overwrite the hashtable with the changes
      Integer i = new Integer(jCombo_debug_level.getSelectedIndex());
      modelconf.put("DEBUGLEVEL", i.toString() );
      if(jRB_screen.isSelected()) {
        modelconf.put("OUTPUTDEVICE", "screen");
        modelconf.put("OUTPUTFILE", " ");
      }
      else {
        modelconf.put("OUTPUTDEVICE", "file");
        modelconf.put("OUTPUTFILE", modelenv.curmodel + ".OUT." + jTF_file.getText());
      }


      //Write everything to the file
      try {
        java.io.FileWriter fw = new java.io.FileWriter( modelenv.curdir + "/" + modelenv.curmodel + ".config" );
        java.io.BufferedWriter bw = new java.io.BufferedWriter(fw);

        for (java.util.Enumeration e = modelconf.keys() ; e.hasMoreElements() ;) {
            Object key = e.nextElement();
            bw.write(key + "=" + modelconf.get(key));
            bw.newLine();
        }

        bw.close();
        fw.close();
      } catch(java.io.IOException e) {
        javax.swing.JOptionPane.showMessageDialog(this,"Error -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
      }
      //updates the modelenv global variables
      modelenv.debuglevel = jCombo_debug_level.getSelectedIndex();
      modelenv.outputdevice = jRB_file.isSelected();
      if(!(modelenv.outputdevice)) {
        modelenv.outputfile   = "";
        modelenv.fileout      = "";
      }
      else {
        modelenv.outputfile   = jTF_file.getText();
        modelenv.fileout      = modelenv.curdir + "/" + modelenv.curmodel + ".OUT." + modelenv.outputfile;
      }
    }
    String tempCurs;
    //System.out.println(modelenv.cureditor + " - " + jTF_Text_Editor.getText().trim() );
    //System.out.println(modelenv.curpsviewer + " - " + jTF_PS_Viewer.getText().trim() );
    if( modelenv.cureditor.trim() != ( tempCurs = jTF_Text_Editor.getText().trim() ) )
    {
        modelenv.cureditor = jTF_Text_Editor.getText();
        //System.out.println("cured not equal");
    }
    if( modelenv.curpsviewer!= ( tempCurs = jTF_PS_Viewer.getText().trim() ) )
    {
        modelenv.curpsviewer = jTF_PS_Viewer.getText();
        //System.out.println("curps not equal");
    }
    if( modelenv.curpdfviewer!= ( tempCurs = jTF_Pdf_Viewer.getText().trim() ) )
    {
        modelenv.curpdfviewer = jTF_Pdf_Viewer.getText();
        //System.out.println("curps not equal");
    }
    
    //System.out.println( modelenv.cureditor + " " + modelenv.curpsviewer );
    //Update modelenv's variables
    modelenv.openlastmodel = jCB_openlast.isSelected();
    modelenv.files2rm.clear();
    modelenv.files2rm.addAll(data2);

    //update deletebutton
    modelenv.verifydelete();

    modelenv.setEnabled(true);
    dispose();
  }//GEN-LAST:event_jB_okActionPerformed

  private void jB_removeActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_removeActionPerformed
    if (!(jList_remove.isSelectionEmpty()))  {
      data1.add(jList_remove.getSelectedValue());
      data2.remove(jList_remove.getSelectedValue());
      jList_dont_remove.setListData(data1);
      jList_remove.setListData(data2);
    }
  }//GEN-LAST:event_jB_removeActionPerformed

  private void jB_remove_allActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_remove_allActionPerformed
     data1.addAll(data2);
     data2.removeAllElements();
     jList_dont_remove.setListData(data1);
     jList_remove.setListData(data2);
  }//GEN-LAST:event_jB_remove_allActionPerformed

  private void jB_add_allActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_add_allActionPerformed
      data2.addAll(data1);
      data1.removeAllElements();
      jList_dont_remove.setListData(data1);
      jList_remove.setListData(data2);
  }//GEN-LAST:event_jB_add_allActionPerformed

  private void jB_addActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_addActionPerformed
    if (!(jList_dont_remove.isSelectionEmpty())) {
      data2.add(jList_dont_remove.getSelectedValue());
      data1.remove(jList_dont_remove.getSelectedValue());
      jList_dont_remove.setListData(data1);
      jList_remove.setListData(data2);
    }
  }//GEN-LAST:event_jB_addActionPerformed

  private void jB_cancelActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_cancelActionPerformed
    // Cancel Button - don't save anything, just dispose the window.
    modelenv.setEnabled(true);
    dispose();
  }//GEN-LAST:event_jB_cancelActionPerformed

  private void jRB_fileStateChanged (javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRB_fileStateChanged
    jTF_file.setEnabled(jRB_file.isSelected());
  }//GEN-LAST:event_jRB_fileStateChanged

  /** Exit the Application */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    jB_cancelActionPerformed(null);
  }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jP_model_specific;
    private javax.swing.JLabel jL_dont_remove;
    private javax.swing.JLabel jL_debug_level;
    private javax.swing.JTextField jTF_PS_Viewer;
    private javax.swing.JComboBox jCombo_debug_level;
    private javax.swing.JTabbedPane jTP_options;
    private javax.swing.JTextField jTF_Pdf_Viewer;
    private javax.swing.JLabel jL_dl_explanation;
    private javax.swing.JList jList_remove;
    private javax.swing.JButton jB_add_all;
    private javax.swing.JTextField jTF_Text_Editor;
    private javax.swing.JRadioButton jRB_file;
    private javax.swing.JList jList_dont_remove;
    private javax.swing.JRadioButton jRB_screen;
    private javax.swing.JLabel jL_remove;
    private javax.swing.JButton jB_remove;
    private javax.swing.JPanel jP_explanation;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jL_op_explanation2;
    private javax.swing.JPanel jP_separator3;
    private javax.swing.JLabel jL_op_explanation1;
    private javax.swing.JPanel jP_separator2;
    private javax.swing.JPanel jP_separator1;
    private javax.swing.JLabel jL_screen;
    private javax.swing.JButton jB_remove_all;
    private javax.swing.JTextField jTF_file;
    private javax.swing.JScrollPane jSP_remove;
    private javax.swing.JButton jB_ok;
    private javax.swing.JPanel jP_op_explanation;
    private javax.swing.JButton jB_cancel;
    private javax.swing.JScrollPane jSP_dont_remove;
    private javax.swing.JButton jB_add;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox jCB_openlast;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jL_output;
    private javax.swing.JPanel jP_general;
    private javax.swing.JLabel jL_delete_function;
    // End of variables declaration//GEN-END:variables
  private T2modelenv modelenv;

  private java.util.Vector data1; //Extensions not to be removed
  private java.util.Vector data2; //Extensions to be removed
// End of variables declaration
}
