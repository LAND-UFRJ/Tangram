/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2literal extends javax.swing.JFrame {

  /** Initializes the Form */
  public T2literal(T2descriptors mainholder, javax.swing.JButton button) {
    descriptors=mainholder;
    ParentType = 1; //Descriptors

    modelenv = descriptors.modelenv;

    evalbutton = button;
    initComponents ();
    initComponentsManual ();
    pack ();
  }

  public T2literal(T2analytical mainholder, javax.swing.JButton button) {
    analytical=mainholder;
    ParentType = 0; //Analytical

    modelenv = analytical.modelenv;

    evalbutton = button;
    initComponents ();
    initComponentsManual ();
    pack ();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
    private void initComponents() {//GEN-BEGIN:initComponents
        jP_Parameters = new javax.swing.JPanel();
        jL_Number_of_Parameters = new javax.swing.JLabel();
        jSP_Parameters = new javax.swing.JScrollPane();
        jTParams = new javax.swing.JTable();
        jP_Line_1 = new javax.swing.JPanel();
        jL_Parameters_Values = new javax.swing.JLabel();
        jLNPars = new javax.swing.JLabel();
        jP_Status_Bar = new javax.swing.JPanel();
        jL_Status_Bar_Dir = new javax.swing.JLabel();
        jL_Status_Bar_Dir_name = new javax.swing.JLabel();
        jL_Status_Bar_Model = new javax.swing.JLabel();
        jL_Status_Bar_Model_name = new javax.swing.JLabel();
        jBOk = new javax.swing.JButton();
        jL_Tangram_Picture = new javax.swing.JLabel();
        jBCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Tangram II [Parameters]");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jP_Parameters.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Parameters.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_Number_of_Parameters.setText("Number of parameters:");
        jL_Number_of_Parameters.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Parameters.add(jL_Number_of_Parameters, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 15, -1, -1));

        jTParams.setToolTipText("Instantiate each one of the parameters");
        jTParams.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Variable Names", "Values"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTParams.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTParams.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jT_Param_FocusLost(evt);
            }
        });

        jSP_Parameters.setViewportView(jTParams);

        jP_Parameters.add(jSP_Parameters, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 370, 215));

        jP_Line_1.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jP_Parameters.add(jP_Line_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 390, 1));

        jL_Parameters_Values.setText("Parameters values:");
        jL_Parameters_Values.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Parameters.add(jL_Parameters_Values, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        jLNPars.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Parameters.add(jLNPars, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 12, 200, 20));

        getContentPane().add(jP_Parameters, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 10, 390, 290));

        jP_Status_Bar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jP_Status_Bar.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jL_Status_Bar_Dir.setText("Directory:");
        jL_Status_Bar_Dir.setForeground(java.awt.Color.black);
        jL_Status_Bar_Dir.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Status_Bar.add(jL_Status_Bar_Dir, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));

        jL_Status_Bar_Dir_name.setForeground(java.awt.Color.black);
        jP_Status_Bar.add(jL_Status_Bar_Dir_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(76, 4, 260, -1));

        jL_Status_Bar_Model.setText("Model:");
        jL_Status_Bar_Model.setForeground(java.awt.Color.black);
        jL_Status_Bar_Model.setFont(new java.awt.Font("Dialog", 1, 10));
        jP_Status_Bar.add(jL_Status_Bar_Model, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 5, -1, -1));

        jL_Status_Bar_Model_name.setForeground(java.awt.Color.black);
        jP_Status_Bar.add(jL_Status_Bar_Model_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 4, 114, -1));

        getContentPane().add(jP_Status_Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 305, 510, 20));

        jBOk.setToolTipText("Save");
        jBOk.setFont(new java.awt.Font("Dialog", 1, 10));
        jBOk.setText("Ok");
        jBOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOkActionPerformed(evt);
            }
        });

        getContentPane().add(jBOk, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 10, 110, 30));

        jL_Tangram_Picture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_literals.gif")));
        getContentPane().add(jL_Tangram_Picture, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 265, -1, -1));

        jBCancel.setFont(new java.awt.Font("Dialog", 1, 10));
        jBCancel.setText("Cancel");
        jBCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelActionPerformed(evt);
            }
        });

        getContentPane().add(jBCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 55, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 330, 1, 1));

    }//GEN-END:initComponents

  private void jT_Param_FocusLost (java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jT_Param_FocusLost
    jTParams.editingStopped(null);
  }//GEN-LAST:event_jT_Param_FocusLost

  private void jBOkActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOkActionPerformed
    Integer npars;

    try {
      String line;

      npars = new Integer(jLNPars.getText());
      for (int i=0; i<npars.intValue(); i++ ){
        line = (String)jTParams.getValueAt(i,1);
        if( (line != null) && (line.trim().length() > 0) ){
          if (T2functions.Is_valid_parameter(line,1) == 1) {
            javax.swing.JOptionPane.showMessageDialog(this, (String)jTParams.getValueAt(i,0) + " must be a number.", "Warning", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
          }
        }
        else
        {
          javax.swing.JOptionPane.showMessageDialog(this, "You must specify a value for all rows", "Warning", javax.swing.JOptionPane.ERROR_MESSAGE);
          return;
        }
      }

      Process trans = Runtime.getRuntime().exec( "trans_param " + modelenv.curmodel );
      java.io.PrintWriter out = new java.io.PrintWriter( trans.getOutputStream() );

      npars = new Integer(jLNPars.getText());
      for (int i=0; i<npars.intValue(); i++ ){
        out.println( jTParams.getValueAt(i,1) );
        out.flush();
      }

      Thread.sleep(1);
      trans.waitFor();
      if(trans.exitValue() == 0)
        evalbutton.setEnabled(true);
      else
        javax.swing.JOptionPane.showMessageDialog(this, "trans_param returned an error code: "+trans.exitValue(), "Warning", javax.swing.JOptionPane.ERROR_MESSAGE);

    }
    catch ( Exception e) {
      javax.swing.JOptionPane.showMessageDialog(this,"Error executing trans_param -- " + e.toString(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
      return;
    }

    if(ParentType == 0) //Analytical
        analytical.setEnabled(true);
    else if(ParentType == 1) //Descriptors
        descriptors.setEnabled(true);

    dispose();
  }//GEN-LAST:event_jBOkActionPerformed

  private void jBCancelActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelActionPerformed
    if(ParentType == 0) //Analytical
        analytical.setEnabled(true);
    else if(ParentType == 1) //Descriptors
        descriptors.setEnabled(true);
    dispose();
  }//GEN-LAST:event_jBCancelActionPerformed


  //initComponents Manual
  private void initComponentsManual () {
    // Updates the window.
    String line;

    jL_Status_Bar_Dir_name.setText(T2functions.status_directory(modelenv.curdir));
    jL_Status_Bar_Model_name.setText(modelenv.curmodel);
    try {

      Integer npars; int i, breakindex;

      java.io.FileReader fr = new java.io.FileReader( modelenv.curmodel + ".generator_mtx.expr" );
      java.io.BufferedReader br = new java.io.BufferedReader(fr);

      jLNPars.setText( br.readLine () );
      npars = new Integer(jLNPars.getText());

      for ( i=0; i<npars.intValue(); i++ ){
        line = br.readLine();
        breakindex = line.indexOf("\t");
        if (breakindex == -1)
        {
          breakindex = line.indexOf(" ");
          if (breakindex == -1)
          {
            javax.swing.JOptionPane.showMessageDialog(this,"Integrity error in " + modelenv.curmodel +
              ".generator_mtx.expr:\ncould not find a break point between var. name and associated char.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
          }
        }
        jTParams.setValueAt(line.substring(breakindex).trim(), i ,0);
      }

      br.close();
      fr.close();
    }
    catch ( Exception e ) {
      javax.swing.JOptionPane.showMessageDialog(this,"Could not open "+ modelenv.curmodel + ".generator_mtx.expr", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
  }

  /** Exit the Application */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    if(ParentType == 0) //Analytical
        analytical.setEnabled(true);
    else if(ParentType == 1) //Descriptors
        descriptors.setEnabled(true);
    dispose();
  }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jP_Line_1;
    private javax.swing.JLabel jLNPars;
    private javax.swing.JScrollPane jSP_Parameters;
    private javax.swing.JLabel jL_Tangram_Picture;
    private javax.swing.JLabel jL_Status_Bar_Model_name;
    private javax.swing.JPanel jP_Status_Bar;
    private javax.swing.JButton jBOk;
    private javax.swing.JButton jBCancel;
    private javax.swing.JLabel jL_Status_Bar_Dir_name;
    private javax.swing.JLabel jL_Status_Bar_Model;
    private javax.swing.JLabel jL_Number_of_Parameters;
    private javax.swing.JLabel jL_Parameters_Values;
    private javax.swing.JLabel jL_Status_Bar_Dir;
    private javax.swing.JPanel jP_Parameters;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable jTParams;
    // End of variables declaration//GEN-END:variables
  public T2analytical analytical;
  public T2descriptors descriptors;
  public T2modelenv modelenv;
  private javax.swing.JButton evalbutton;
  private int ParentType;
// End of variables declaration

}
