/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * T2MTKHmmImportFromTangram.java
 *
 * Created on May 19, 2009, 9:17:10 PM
 */

package Tangram2;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.List;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;

/**
 *
 * @author balves
 */
public class T2MTKHmmImportFromTangram extends javax.swing.JFrame {

    /** Creates new form T2MTKHmmImportFromTangram */
    public T2MTKHmmImportFromTangram() {
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tangram II");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tangram-II State Variables"));

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Hidden Model Variables"));

        jScrollPane2.setViewportView(jList2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setText(">>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select State Variables from Model");

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed


        if(jList2.getModel().getSize() == 0){
            T2MTKCommon.errorMessage("", "You must select at least one Tangram-II state variable.");
        }else{
            T2MTKCommon.clearCmds();
            T2MTKCommon.createCmds();
            T2MTKCommon.addCmd("h = new hmm()");
            String states = "\"";
            for(int i = 0;i<listModel.getSize();i++){
                states += listModel.getElementAt(i)+"\", \"";
            }
            states = states.substring(0, states.length()-3);
            T2MTKCommon.addCmd("h.import_from_tangram(\""+currdir+currmodel+".obj\", "+listModel.getSize()+", "+states+")");
            T2MTKCommon.addCmd("h.save(\""+currdir+currmodel+".HMM.A\",\"A\")");
            T2MTKMessages out = T2MTKCommon.exec();
            if(!out.getError().equals("")){
                T2MTKCommon.errorMessage("Importing From Model", out.getError());
            }else{
                T2MTKHmmReadForm readHmmForm = new T2MTKHmmReadForm();
                readHmmForm.setVisible(true);
                readHmmForm.import_from_tangram();
                this.dispose();
            }


            //Creating View Matrix needed files

            try {
                PrintWriter vstatFile = new PrintWriter(new FileWriter(new File(currdir + currmodel + ".HMM.hidden_st.vstat")), true);
                for(int i = 0;i<listModel.getSize();i++){
                    vstatFile.println(listModel.getElementAt(i));
                }
                vstatFile.close();
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error writing state vars file. "+ex.getMessage());
            }

            ListModel l1m = jList1.getModel();
            List<Integer> hiddenPosition = new LinkedList<Integer>();
            for(int j=0;j<l1m.getSize();j++){
                if(listModel.contains(l1m.getElementAt(j))){
                    hiddenPosition.add(j);
                }
            }
            try {
                BufferedReader statesFile = new BufferedReader(new FileReader(new File(currdir + currmodel + ".states")));
                PrintWriter newStatesFile = new PrintWriter(new FileWriter(new File(currdir + currmodel + ".HMM.hidden_st.states")),true);
                int state = 1;
                List<String> permutations = new LinkedList<String>();
                while(statesFile.ready()){

                    StringTokenizer st = new StringTokenizer(statesFile.readLine(), "(");
                    String stateId = st.nextToken();
                    String permutation = st.nextToken();
                    permutation = permutation.substring(0,permutation.indexOf(")"));
                    st = new StringTokenizer(permutation,",");
                    String permOut = "";
                    int pos = 0;
                    while(st.hasMoreTokens()){
                        String stateValue = st.nextToken();
                        if(hiddenPosition.contains(pos)){
                            permOut += stateValue+",";
                        }
                        pos++;
                    }
                    permOut = permOut.substring(0,permOut.length()-1);
                    if(!permutations.contains(permOut)){
                        permutations.add(permOut);
                        newStatesFile.println(state+" ("+permOut+")");
                        state++;
                    }

                    
                }
            } catch (FileNotFoundException ex) {
                T2MTKCommon.errorMessage("", "Error reading "+currmodel+".states file. "+ex.getMessage());
            } catch (IOException ex) {
                T2MTKCommon.errorMessage("", "Error reading "+currmodel+".states file. "+ex.getMessage());
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        BufferedReader in = null;
        File stateVarsFile = new File(currdir + currmodel + ".vstat");
        
        try {
            in = new BufferedReader(new FileReader(stateVarsFile));
            
        } catch (IOException ex) {
            T2MTKCommon.errorMessage("", "Cannot read state variables from file: "+stateVarsFile.getName()+". "+ex.getMessage());
        }
        List<String> state_vars = new LinkedList<String>();
        String state = "";

        int i =0;
        try {
            while ((state = in.readLine()) != null) {
                state_vars.add(new String(state));
            }
        } catch (IOException ex) {
            T2MTKCommon.errorMessage("", "Cannot read state variables from file: "+stateVarsFile.getName()+". "+ex.getMessage());
        }
        if(state_vars != null){
           jList1.setListData(state_vars.toArray());
        }

    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        Object[] values = jList1.getSelectedValues();
        for(int i = 0;i<jList1.getSelectedIndices().length;i++){
            listModel.addElement(values[i].toString());
        }

        jList2.setModel(listModel);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        //TODO bruno: Corrigir a remoção múltipla.

        Object[] values = jList2.getSelectedValues();
        for(int i = 0;i<jList2.getSelectedIndices().length;i++){
            listModel.removeElement(values[i].toString());
        }
        jList2.setModel(listModel);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new T2MTKHmmImportFromTangram().setVisible(true);
            }
        });
    }

    private String currdir = T2MTKCommon.currdir;
    private String currmodel = T2MTKCommon.currmodel;
    private DefaultListModel listModel = new DefaultListModel();


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
