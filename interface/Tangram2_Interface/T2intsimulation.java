/*
 * Copyright (C) 1999-2009, Edmundo Albuquerque de Souza e Silva.
 *
 * This file may be distributed under the terms of the Q Public License
 * as defined by Trolltech AS of Norway and appearing in the file
 * LICENSE.QPL included in the packaging of this file.
 *
 * THIS FILE IS PROVIDED AS IS WITH NO WARRANTY OF ANY KIND, INCLUDING
 * THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL,
 * INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

package Tangram2;

public class T2intsimulation extends javax.swing.JFrame {

    
  /** Initializes the Form */
    
  public T2intsimulation(T2simulation holder, int simul_mode) {
    
    simulation_mode = simul_mode;
    
    simulation = holder;
    initComponents ();
    initComponentsManual ();
    pack ();
          
  }
  
  public T2intsimulation(T2simulation holder) {
          
    this( holder, 0 );
    
  }
  
  
  

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the FormEditor.
   */
    private void initComponents() {//GEN-BEGIN:initComponents
        jB_Close = new javax.swing.JButton();
        jPanelMain = new javax.swing.JPanel();
        jB_Start = new javax.swing.JButton();
        jB_Step = new javax.swing.JButton();
        jB_End = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        setTitle("Tangram II [Interactive Simulation]");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jB_Close.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_Close.setLabel("Close");
        jB_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_CloseActionPerformed(evt);
            }
        });

        getContentPane().add(jB_Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 10, 110, 30));

        jPanelMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelMain.setBorder(new javax.swing.border.LineBorder(java.awt.Color.gray));
        jB_Start.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_Start.setLabel("Start");
        jB_Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_StartActionPerformed(evt);
            }
        });

        jPanelMain.add(jB_Start, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, 30));

        jB_Step.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_Step.setLabel("Step");
        jB_Step.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_StepActionPerformed(evt);
            }
        });

        jPanelMain.add(jB_Step, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, 30));

        jB_End.setFont(new java.awt.Font("Dialog", 1, 10));
        jB_End.setLabel("End");
        jB_End.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_EndActionPerformed(evt);
            }
        });

        jPanelMain.add(jB_End, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 110, 30));

        getContentPane().add(jPanelMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 10, 135, 130));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Tangram2/imgs/tang_intsimul.gif")));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 145, 1, 1));

    }//GEN-END:initComponents
/*********************************** initComponents Manual *********************************************/
  private void initComponentsManual () {
    jB_Step.setEnabled(false);
    jB_End.setEnabled(false);
    jB_Start.setEnabled(true);
  }

/************************************** write_intsimul function **************************************************/
//write the <modelname>.INTSIMUL file
//format:
// The results of the interactive simulation are shown directly in tgif.

  private int write_intsimul() {
    try{
      java.io.FileWriter     f = new java.io.FileWriter( simulation.modelenv.curmodel + ".INTSIMUL" );
      java.io.BufferedWriter b = new java.io.BufferedWriter( f );

      b.write( "The results of the interactive simulation are shown directly in tgif.\n" );

       b.close();
      f.close();
    }
    catch( java.io.IOException e ) {
      javax.swing.JOptionPane.showMessageDialog(this,"Couldn't write the file " + simulation.modelenv.curmodel + ".INTSIMUL","Error",javax.swing.JOptionPane.ERROR_MESSAGE);
      return(-2);
    }
    return(0);
  }
  
  
  public static void send_command_to_tgif(  String command, 
                                            java.io.BufferedReader input_from_tgif,
                                            java.io.PrintWriter output_to_tgif
                                         )
  {
      try{

          char next_char;

          /* Wait for the appropriate time (time to load the model) to call mark_find. */

          while( (next_char = (char)input_from_tgif.read()) != -1 )
          {
            if ( next_char == ')' ) 
            {
                 break;
            }
          }

          output_to_tgif.println( command );
          
          
          Thread.sleep(1); 

              /* 
               * Trick:
               *
               * The sleep system call causes an operating system process change of context,
               *
               * flushing the output command sent to tgif immediatly.
               *
               */

          output_to_tgif.flush(); /* Does nothing? */
      }
      catch ( java.lang.Exception e )
      {
          System.out.println("Error communicating with tgif.");
      }
  } 
  
  public void simulation_finished()
  {
    jB_Step.setEnabled(false);
    jB_End.setEnabled(false);
  }
  
  private void jB_EndActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_EndActionPerformed
/*    
    send_command_to_tgif( "set_file_not_modified()", intgif, outtgif );
    send_command_to_tgif( "call_simple_shortcut(Quit)" , intgif, outtgif );
*/
    jB_Start.setEnabled(true);
    jB_End.setEnabled(false);
    
    if (tgif != null) {
      tgif.destroy();
      tgif = null;
    }
    if (mark_find != null) {
      mark_find.destroy();
      mark_find= null;
    }
    
    
    
  }//GEN-LAST:event_jB_EndActionPerformed

  
  
  private void jB_StepActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_StepActionPerformed
    
    send_command_to_tgif( "call_simple_shortcut(Tangram2SimulationStep)", intgif, outtgif);
    
    if (    ( simulation_mode == simulation.CONTINUOUS_SIMUL_MODE ) || 
            ( simulation_mode == simulation.ANIMATION_SIMUL_MODE ) )
    {
        jB_Step.setEnabled( false );
    }
         
  }//GEN-LAST:event_jB_StepActionPerformed

  private void jB_CloseActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_CloseActionPerformed
    if (tgif != null) tgif.destroy();
    if (mark_find != null) mark_find.destroy();
    simulation.setEnabled(true);
    dispose();
  }//GEN-LAST:event_jB_CloseActionPerformed

  private void jB_StartActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_StartActionPerformed
    jB_Step.setEnabled(true);
    jB_End.setEnabled(true);
    jB_Start.setEnabled(false);

    //call T2status just to make mark_find (with no command)
    //note the 9th parameter == TRUE. This means that the variable make_error will be set.
    String command = "echo";
    //redirecting the stdout to the appropriate file (fileout)
    status = new T2status( this, this, "Interactive Simulation Status", "Compiling model...", command, 0 , true, true, true, simulation.modelenv.curmodel, simulation.modelenv.outputscreen, simulation.modelenv.outputscreen, "", "" );
    status.show();
    Process makeProc = status.start();

    /* call another thread that will continue the work after wait for makeProc */
    new threadWaitFor(this, makeProc, "make").start();

    /* write <model>.INTSIMUL file */
    int i = write_intsimul();
    
    /*
     * If we are dealing with continuous simulation it is not necessary to
     *
     *  ask the user to press the step button.
     *
     *
     */
    
    /* Why the following code does not work ? */
    
    /*
    System.err.println ( "continuous simul? " + 
        ( simulation_mode == simulation.CONTINUOUS_SIMUL_MODE ) );
    
    if ( simulation_mode == simulation.CONTINUOUS_SIMUL_MODE )
    {
        try {
            Thread.sleep(1); 
        }
        catch ( java.lang.Exception e )
        {
            System.out.println("Error in the sleep system call.");
        }
        jB_StepActionPerformed ( evt );
        jB_Step.setEnabled( false );
    }
    
    */
        
    
  }//GEN-LAST:event_jB_StartActionPerformed

  /** Exit the Application */
  private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    jB_CloseActionPerformed(null);
  }//GEN-LAST:event_exitForm

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Start;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jB_End;
    private javax.swing.JButton jB_Step;
    private javax.swing.JButton jB_Close;
    // End of variables declaration//GEN-END:variables
  private T2status status;
  private String fileout;
  private threadWaitFor thread;
  public  java.io.PrintWriter outtgif;
  public  java.io.BufferedReader intgif;
  public  int make_error;
  public  T2simulation simulation;
  public  Process tgif;
  public  Process mark_find;
  
  public  Process ps_show_running_processes; /* debug purposes */
  
  int     simulation_mode = 0;

// End of variables declaration

}
